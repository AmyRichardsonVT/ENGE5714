library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
print(nycflights13::flights)
filter(flights,month==1, day ==1)
filter(flights,month18, day 11)
filter(flights, month ==8, day ==11)
?nycflights13
filter(flights,arr_delay > 120 | dep_delay >120)
nycflights13::airlines
nycflights13::airports
?flights
filter(flights, origin == "IAH" | origin == "HOU")
library(nycflights13)
filter(flights, origin == "IAH" | origin == "HOU")
filter(flights, dest == "IAH" | dest == "HOU")
nyflights13::dest
?flights
?nycflights13
library(nycflights13)
?dest
dest::
nycflights13::deest
nycflights13::dest
nycflights13::airports
nycflights13::dest
ncyflights13
filter(flights, airlines == UA & airlines == DL and airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
library(nycflights13)
library(tidyverse)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
rlang::last_error()
nycflights13::airlines
filter(flights, airlines == "UA" & airlines == "DL" & airlines == "AA")
rlang::last_error()
filter(flights, airlines == "UA")
filter(flights, month ==1, day == 1)
filter(flights, carrier == UA)
filter(flights, carrier "UA")
filter(flights, carrier == "UA")
filter(flights, carrier == "UA" & carrier == "DL" & carrier (AA))
filter(flights, carrier == "UA" & carrier == "DL" & carrier == "AA")
filter(flights, carrier == "UA" | carrier == "DL" | carrier == "AA")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, month == 7 | month == 8 | month == 9)
filter(flights, dep_delay <= 0 & arr_delay > 0)
filter(flights, dep_delay <= 0 & arr_delay > 120)
filter(flights, month == 8 & day == 11 & origin == "CVG")
filter(flights, origin == "CVG")
filter(flights, origin == "ORD")
filairports
airports
filter(airports, "CVG")
filter(flights, dest == "CLE")
filter(flights, dest == "CVG")
filter fligts, origin == "CVG")
filter(flights, origin == "CVG")
filter (flights, between(month, 7, 9))
is.na(dep_time)
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
arrange(flights, air_time)
arrange(flights, distance)
arrange(flights, desc(distance))
view()
view(flights)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
#> # A tibble: 336,776 x 9
#>    year month   day dep_delay arr_delay distance air_time  gain speed
#>   <int> <int> <int>     <dbl>     <dbl>    <dbl>    <dbl> <dbl> <dbl>
#> 1  2013     1     1         2        11     1400      227    -9  370.
#> 2  2013     1     1         4        20     1416      227   -16  374.
#> 3  2013     1     1         2        33     1089      160   -31  408.
#> 4  2013     1     1        -1       -18     1576      183    17  517.
#> 5  2013     1     1        -6       -25      762      116    19  394.
#> 6  2013     1     1        -4        12      719      150   -16  288.
#> # â€¦ with 336,770 more rows
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights
flights_test <-(select(flights, dep_time, sched_dep_time))
flights_test
mutate(flights_test, dep_time_min = dep_time %/% 100 * 60 + dep_time %% 100)
flights_test <- (select, air_time, dep_time, arr_time)
flights_test <- select(flights, air_time, dep_time, arr_time)
flights_test
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time)
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air_time)
mutate(flights_test, taxi_time = ((arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100)) - air_time)
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
library(tidyverse)
?diamonds
dimonds
diamonds
Read in Percentage of Engineering Degrees from .csv files
all_degrees <- read.csv("HE_Institutions.csv", header = TRUE)
#Rename first column to match with Teachers.
names(all_degrees)[1] <- "div_name"
#Isolate the 2-year and 4-year columns and convert to percentage
egr_degrees <- all_degrees %>%
select("div_name", "X.EngTot2yr", "X.EngTot4yr" ) %>%
transform(X.EngTot2yr = X.EngTot2yr * 100) %>%
transform(X.EngTot4yr = X.EngTot4yr * 100)
#Create a histogram for 2Y Engineering
hist_2y<- ggplot(egr_degrees, aes (X.EngTot2yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 2 Year Engineering Degrees", x = "Percentange of 2 Year Engineering Degrees", y = "Density")
hist_2y
hist_2y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot2yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot2yr, na.rm = TRUE)), color = "black", size = 1)
#Descriptive Statistics for 2Y Engineering
round(stat.desc(egr_degrees$X.EngTot2yr, basic = FALSE, norm = TRUE), digits = 3)
#Q-QPlot of 2Year
qqplot.2Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot2yr, stat="qq")
qqplot.2Yegr_degrees+ labs(title = "QQPlot for 2 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
#Shapiro-Wilk Test 2 Year
shapiro.test(egr_degrees$X.EngTot2yr)
#Create a histogram for 4Y Engineering
hist_4y<- ggplot(egr_degrees, aes (X.EngTot4yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 4 Year Engineering Degrees", x = "Percentange of 4 Year Engineering Degrees", y = "Density")
hist_4y
hist_4y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot4yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot4yr, na.rm = TRUE)), color = "black", size = 1)
#Descriptive Statistics for 4Y Engineering
round(stat.desc(egr_degrees$X.EngTot4yr, basic = FALSE, norm = TRUE), digits = 3)
#Q-QPlot of 4Year
qqplot.4Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot4yr, stat="qq")
qqplot.4Yegr_degrees+ labs(title = "QQPlot for 4 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
#Shapiro-Wilk Test 4 Year
shapiro.test(egr_degrees$X.EngTot4yr)
library(car)
library(ggplot2)
library(pastecs)
library(psych)
library(Rcmdr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(car)
library(psych)
library(ggplot2)
library(tidyverse)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Problem Set 2")
all_degrees <- read.csv("PS_Degrees.csv", header = TRUE)
names(all_degrees)[1] <- "div_name"
percent_degrees <- all_degrees %>%
select("Div_num", "X.2r", "X.4yr", "X.EngTot4yr", "X.CSSTEMH4yr" ) %>%
transform(X.2r = X.2r * 100) %>%
transform(X.4yr = X.4yr * 100) %>%
transform(X.EngTot4yr = X.EngTot4yr * 100) %>%
transform(X.CSSTEMH4yr = X.CSSTEMH4yr * 100)
percent_degrees <- percent_degrees[-c(135:144), ]
degree_df_long <- percent_degrees %>%
pivot_longer(cols = X.2r:X.CSSTEMH4yr, names_to = "Variable", values_to = "Percentages")
degree_df_long %>%
ggplot(aes(x = Percentages, fill = Variable)) +
geom_histogram() +
facet_wrap(Variable ~.) +
theme(legend.position = "none")
degree_df_long %>%
ggplot(aes(x = Percentages, fill = Variable)) +
geom_histogram() +
facet_wrap(Variable ~., scales = "free") +
theme(legend.position = "none")
degree_df_long %>%
ggplot(aes(sample=Percentages)) +
stat_qq() +
stat_qq_line() +
facet_wrap(Variable ~ ., scales = "free")
prinData <- read.csv("Prin_Salary.csv", header = TRUE)
teachData <- read.csv("Teach_Salary.csv", header = TRUE)
prinData <- prinData%>%
mutate_at(vars(starts_with("FY20")), as.numeric)
prinData_sub <- prinData %>%
select(div_name, starts_with("FY20"))
teachData_sub <- teachData %>%
select(div_name, starts_with("FY20"))
prinData_long <- gather(prinData_sub, Year, Salary,  FY2005P:FY2016P)
teachData_long <- gather(teachData_sub, Year, Salary,  FY2005T:FY2016T)
prinData_long [prinData_long  <= 0] <- NA
teachData_long [teachData_long  <= 0] <- NA
str(prinData)
prinData_sub <- prinData %>%
select(div_name, FY2005P, FY2016P)
teachData_sub <- teachData %>%
select(div_name, FY2005T, FY2016T)
prinData_long <- gather(prinData_sub, Year, Salary,  FY2005P, FY2016P)
teachData_long <- gather(teachData_sub, Year, Salary,  FY2005T, FY2016T)
View(prinData_long)
View(teachData_long)
prinData_long [prinData_long  <= 0] <- NA
teachData_long [teachData_long  <= 0] <- NA
salary_data <- full_join(prinData_long,teachData_long)
View(salary_data)
View(salary_data)
salary_data <- full_join(prinData_sub,teachData_sub)
salary_data [salary_data  <= 0] <- NA
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")
fit_salary_2005 <- lm(FY2005T ~ FY2005P, data = salary_data)
summary(fit_salary_2005)
fit_salary_2016 <- lm(FY2016T ~ FY2016P, data = salary_data)
summary(fit_salary_2016)
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Teacher Salaries", y = "Principal Salaries")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(x = "Teacher Salaries", y = "Principal Salaries")
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "2005",  x = "Teacher Salaries", y = "Principal Salaries")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(title = "2016", x = "Teacher Salaries", y = "Principal Salaries")
plot(fit_salary_2005)
plot(fit_salary_2016)
salary_data$residuals <- resid(fit_salary_2005)
salary_data$residual05 <- resid(fit_salary_2005)
model_all$residuals
library(broom)
model_all$residuals
salary_data$residuals
salary_data$residual05
prinData <- read.csv("Prin_Salary.csv", header = TRUE)
teachData <- read.csv("Teach_Salary.csv", header = TRUE)
prinData <- prinData%>%
mutate_at(vars(starts_with("FY20")), as.numeric)
prinData_sub <- prinData %>%
select(div_name, FY2005P, FY2016P)
teachData_sub <- teachData %>%
select(div_name, FY2005T, FY2016T)
salary_data [salary_data  <= 0] <- NA
prinData <- read.csv("Prin_Salary.csv", header = TRUE)
teachData <- read.csv("Teach_Salary.csv", header = TRUE)
prinData_sub <- prinData %>%
select(div_name, FY2005P, FY2016P)
teachData_sub <- teachData %>%
select(div_name, FY2005T, FY2016T)
prinData <- read.csv("Prin_Salary.csv", header = TRUE)
teachData <- read.csv("Teach_Salary.csv", header = TRUE)
prinData_sub <- prinData %>%
select(div_name, FY2005P, FY2016P)
teachData_sub <- teachData %>%
select(div_name, FY2005T, FY2016T)
prinData <- prinData%>%
mutate_at(vars(starts_with("FY20")), as.numeric)
salary_data <- full_join(prinData_sub,teachData_sub)
salary_data [salary_data  <= 0] <- NA
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "2005",  x = "Teacher Salaries", y = "Principal Salaries")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(title = "2016", x = "Teacher Salaries", y = "Principal Salaries")
fit_salary_2005 <- lm(FY2005T ~ FY2005P, data = salary_data)
summary(fit_salary_2005)
fit_salary_2016 <- lm(FY2016T ~ FY2016P, data = salary_data)
summary(fit_salary_2016)
salary_data$residual05 <- resid(fit_salary_2005)
salary_data <- inner_join(prinData_sub,teachData_sub)
salary_data [salary_data  <= 0] <- NA
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "2005",  x = "Teacher Salaries", y = "Principal Salaries")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(title = "2016", x = "Teacher Salaries", y = "Principal Salaries")
fit_salary_2005 <- lm(FY2005T ~ FY2005P, data = salary_data)
summary(fit_salary_2005)
fit_salary_2016 <- lm(FY2016T ~ FY2016P, data = salary_data)
summary(fit_salary_2016)
salary_data$residual05 <- resid(fit_salary_2005)
salary_data$residual05 <- resid(fit_salary_2005)
salary_data$standardized.residuals05 <- rstandard(fit_salary_2005)
salary_data$studentized.residuals05 <- rstudent(fit_salary_2005)
salary_data$cooks.distance05 <-cooks.distance(fit_salary_2005)
salary_data$dfbeta05 <- dfbeta(fit_salary_2005)
salary_data$dffit05 <- dffits(fit_salary_2005)
salary_data$leverage05 <- hatvalues(fit_salary_2005)
salary_data$covariance.ratios05 <- covratio(fit_salary_2005)
salary_data$residual16 <- resid(fit_salary_2016)
salary_data$standardized.residuals16 <- rstandard(fit_salary_2016)
salary_data$studentized.residuals16 <- rstudent(fit_salary_2016)
salary_data$cooks.distance16 <-cooks.distance(fit_salary_2016)
salary_data$dfbeta16 <- dfbeta(fit_salary_2016)
salary_data$dffit16 <- dffits(fit_salary_2016)
salary_data$leverage16 <- hatvalues(fit_salary_2016)
salary_data$covariance.ratios16 <- covratio(fit_salary_2016)
fit_salary_df <- salary_data %>%
mutate(large.residual = case_when(standardized.residuals > 2 | standardized.residuals < -2 ~ TRUE,
abs(standardized.residuals) <= 2 ~ FALSE))
fit_salary_df <- salary_data %>%
mutate(large.residual = case_when(standardized.residuals05 > 2 | standardized.residuals05 < -2 ~ TRUE,
abs(standardized.residuals05) <= 2 ~ FALSE))
View(fit_salary_2005)
View(fit_salary_2016)
View(fit_salary_df)
fit_salary_df %>% filter(large.residual05 == TRUE) %>% head()
fit_salary_df <- salary_data %>%
mutate(large.residual05 = case_when(standardized.residuals05 > 2 | standardized.residuals05 < -2 ~ TRUE,
abs(standardized.residuals05) <= 2 ~ FALSE))
fit_salary_df %>% filter(large.residual05 == TRUE) %>% head()
plot(fit_salary_2005)
fit_salary_df <- salary_data %>%
mutate(large.residual16 = case_when(standardized.residuals16 > 2 | standardized.residuals16 < -2 ~ TRUE,
abs(standardized.residuals16) <= 2 ~ FALSE))
fit_salary_df %>% filter(large.residual16 == TRUE) %>% head()
plot(fit_salary_2016)
half_salary_1 <- split(salary_data, sample(1;5, times=c(65,65)))
split(salary_data, sample(1;5, times=c(65,65)))
split(salary_data, sample(1:5, times=c(65,65)))
split(salary_data, sample(1:2, times=c(65,65)))
split(salary_data, sample(1:2))
split_df(salary_data, 2)
split(salary_data, sample(1:2, nrow(df, replace =T)))
split(salary_data, sample(1:2)
split(salary_data, sample(1:2))
split(salary_data, sample(1:2), nrow(salary_data))
$`1`
str(1)
str('1')
set.seed(37645)
salary_sample1 <- rbinom(nrow(salary_data), 1, 0.5)
salary_sample1 <- salary_data[dummy_sep == 0, ]
set.seed(37645)
dummy_sep <- rbinom(nrow(salary_data), 1, 0.5)
salary_sample1 <- salary_data[dummy_sep == 0, ]
salary_sample2 <- salary_data[dummy_sep == 1, ]
View(salary_sample2)
View(salary_sample1)
set.seed(37645)
dummy_sep <- rbinom(nrow(salary_data), 1, 0.5)
salary_sample1 <- salary_data[dummy_sep == 0, ]
salary_sample2 <- salary_data[dummy_sep == 1, ]
fit_salary1_2005 <- lm(FY2005T ~ FY2005P, data = salary_sample1)
summary(fit_salary1_2005)
fit_salary2_2005 <- lm(FY2005T ~ FY2005P, data = salary_sample2)
summary(fit_salary2_2005)
salary_sample1 %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "2005:  Sample Group 1",  x = "Teacher Salaries", y = "Principal Salaries")
salary_sample2 %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(title = "2005:  Sample Group 2", x = "Teacher Salaries", y = "Principal Salaries")
salary_sample1 %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "2005:  Sample Group 1",  x = "Principal Salaries", y = "Teacher Salaries")
salary_sample2 %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(title = "2005:  Sample Group 2", x = "Principal Salaries", y = "Teacher Salaries")
salary_data %>%
ggplot(aes(x = FY2005P, y = FY2005T)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "2005",  x = "Principal Salaries", y = "Teacher Salaries")
salary_data %>%
ggplot(aes(x = FY2016P, y = FY2016T)) +
geom_point() +
geom_smooth(method = "lm")+
labs(title = "2016", x = "Principal Salaries", y = "Teacher Salaries")
View(salary_data)
View(all_degrees)
VA_chars <- read.csv("VA_characteristics.csv", header = TRUE)
View(VA_chars)
VA_chars_sub <- VA_chars %>%
select(Locality, HS2015, Unemploy2015, Comp_index_2014_2016)
View(VA_chars_sub)
VA_chars_sub <- VA_chars %>%
select(Locality, HS2015, Unemploy2015, Comp_index_2014_2016)
View(VA_chars_sub)
degree_sub <- all_degrees %>%
select(div_name, X.STEMHall)
View(degree_sub)
char_degree <- inner_join(VA_chars_sub,degree_sub)
char_degree <- inner_join(VA_chars_sub, degree_sub)
str(degree_sub)
str(VA_chars_sub)
VA_chars <- read.csv("VA_characteristics.csv", header = TRUE)
VA_chars_sub <- VA_chars %>%
select(Locality, HS2015, Unemploy2015, Comp_index_2014_2016)
degree_sub <- all_degrees %>%
select(div_name, X.STEMHall)
str(VA_chars_sub
str(VA_chars_sub)
str(VA_chars_sub)
VA_chars_sub <- as.numeric(HS2015, Unemploy2015, Comp_index_2014_2016)
VA_chars_sub <- as.numeric("HS2015", "Unemploy2015", "Comp_index_2014_2016")
str(VA_chars_sub)
VA_chars <- read.csv("VA_characteristics.csv", header = TRUE)
VA_chars_sub <- VA_chars %>%
select(Locality, HS2015, Unemploy2015, Comp_index_2014_2016)
degree_sub <- all_degrees %>%
select(div_name, X.STEMHall)
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vas("HS2015", "Unemploy2015", "Comp_index_2014_2016"), as.numeric)
VA_chars_sub <- VA_chars_sub %>%
mutate_at("HS2015", "Unemploy2015", "Comp_index_2014_2016"
, as.numeric)
str(VA_chars_sub)
mutate_at(vars(starts_with ("HS2015", "Unemploy2015", "Comp_index_2014_2016")
VA_chars_sub <- VA_chars_sub %>%
str(VA_chars_sub)
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("HS2015"), as.numeric))
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("HS"), as.numeric))
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("HS")), as.numeric)
str(VA_chars_sub)
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("HS", "Une", "Com")), as.numeric)
str(VA_chars_sub)
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("HS")), as.numeric) +
mutate_at(vars(starts_with ("Une")), as.numeric) +
mutate_at(vars(starts_with ("Comp")), as.numeric)
str(VA_chars_sub)
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("Une")), as.numeric)
VA_chars_sub <- VA_chars_sub %>%
mutate_at(vars(starts_with ("Comp")), as.numeric)
str(VA_chars_sub)
char_degree <- inner_join(VA_chars_sub, degree_sub)
char_degree <- inner_join(VA_chars_sub, degree_sub)
View(VA_chars)
desc(degree_sub)
str(degree_sub)
str(VA_chars_sub)
char_degree <- full_join(VA_chars_sub, degree_sub)
names(VA_chars_sub)[1] <- "div_name"
char_degree <- inner_join(VA_chars_sub, degree_sub, by = "div_name")
View(char_degree)
str(char_degree)
fit_single_degree <- lm(X.STEMHall ~ HS2015, data = char_degree)
summary(fit_single_degree)
char_degree %>%
ggplot(aes(x = HS2015, y = X.STEMHall)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Single Regres",  x = "Percentage of STEM-H Degrees", y = "High School Graduation Rate")
char_degree %>%
ggplot(aes(x = HS2015, y = X.STEMHall)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Single Regres",  x = "High School Graduation Rate", y = "Percentage of STEM-H Degrees")
fit_single_degree <- lm(X.STEMHall ~ Unemploy2015, data = char_degree)
summary(fit_single_degree)
char_degree %>%
ggplot(aes(x = Unemploy2015, y = X.STEMHall)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Single Regression 2015",  x = "Unemployment Rate", y = "Percentage of STEM-H Degrees")
fit_single_degree <- lm(X.STEMHall ~ Comp_index_2014_2016, data = char_degree)
summary(fit_single_degree)
