ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ<5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg)+geom_point(mapping=aes(x = drv, y = class))+geom_point()+geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))+geom_point()+geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))++geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))+geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
<- library(tidyverse)
library(tidyverse)
ggplot(data = mpg)+geom_point(mapping = aes(x = displ, y = hwy))
filter(mpg,cyl = 8)
filter(mpg, cyl = 4)
?filter
filter(mpg, cyl<8)
filter (diamond, carat > 3)
filter (diamonds, carat > 3 )
library(nycflights13)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
install.packages("dplyr")
library(nycflights13)
library(nycflights13)
dplyr
install.packages("dplyr")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
library(nycflights13)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
install.packages("dplyr")
library(nycflights13)
library(nycflights13)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
print(nycflights13::flights)
filter(flights,month==1, day ==1)
filter(flights,month18, day 11)
filter(flights, month ==8, day ==11)
?nycflights13
filter(flights,arr_delay > 120 | dep_delay >120)
nycflights13::airlines
nycflights13::airports
?flights
filter(flights, origin == "IAH" | origin == "HOU")
library(nycflights13)
filter(flights, origin == "IAH" | origin == "HOU")
filter(flights, dest == "IAH" | dest == "HOU")
nyflights13::dest
?flights
?nycflights13
library(nycflights13)
?dest
dest::
nycflights13::deest
nycflights13::dest
nycflights13::airports
nycflights13::dest
ncyflights13
filter(flights, airlines == UA & airlines == DL and airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
library(nycflights13)
library(tidyverse)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
rlang::last_error()
nycflights13::airlines
filter(flights, airlines == "UA" & airlines == "DL" & airlines == "AA")
rlang::last_error()
filter(flights, airlines == "UA")
filter(flights, month ==1, day == 1)
filter(flights, carrier == UA)
filter(flights, carrier "UA")
filter(flights, carrier == "UA")
filter(flights, carrier == "UA" & carrier == "DL" & carrier (AA))
filter(flights, carrier == "UA" & carrier == "DL" & carrier == "AA")
filter(flights, carrier == "UA" | carrier == "DL" | carrier == "AA")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, month == 7 | month == 8 | month == 9)
filter(flights, dep_delay <= 0 & arr_delay > 0)
filter(flights, dep_delay <= 0 & arr_delay > 120)
filter(flights, month == 8 & day == 11 & origin == "CVG")
filter(flights, origin == "CVG")
filter(flights, origin == "ORD")
filairports
airports
filter(airports, "CVG")
filter(flights, dest == "CLE")
filter(flights, dest == "CVG")
filter fligts, origin == "CVG")
filter(flights, origin == "CVG")
filter (flights, between(month, 7, 9))
is.na(dep_time)
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
arrange(flights, air_time)
arrange(flights, distance)
arrange(flights, desc(distance))
view()
view(flights)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
#> # A tibble: 336,776 x 9
#>    year month   day dep_delay arr_delay distance air_time  gain speed
#>   <int> <int> <int>     <dbl>     <dbl>    <dbl>    <dbl> <dbl> <dbl>
#> 1  2013     1     1         2        11     1400      227    -9  370.
#> 2  2013     1     1         4        20     1416      227   -16  374.
#> 3  2013     1     1         2        33     1089      160   -31  408.
#> 4  2013     1     1        -1       -18     1576      183    17  517.
#> 5  2013     1     1        -6       -25      762      116    19  394.
#> 6  2013     1     1        -4        12      719      150   -16  288.
#> # â€¦ with 336,770 more rows
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights
flights_test <-(select(flights, dep_time, sched_dep_time))
flights_test
mutate(flights_test, dep_time_min = dep_time %/% 100 * 60 + dep_time %% 100)
flights_test <- (select, air_time, dep_time, arr_time)
flights_test <- select(flights, air_time, dep_time, arr_time)
flights_test
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time)
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air_time)
mutate(flights_test, taxi_time = ((arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100)) - air_time)
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
library(tidyverse)
?diamonds
dimonds
diamonds
Read in Percentage of Engineering Degrees from .csv files
all_degrees <- read.csv("HE_Institutions.csv", header = TRUE)
#Rename first column to match with Teachers.
names(all_degrees)[1] <- "div_name"
#Isolate the 2-year and 4-year columns and convert to percentage
egr_degrees <- all_degrees %>%
select("div_name", "X.EngTot2yr", "X.EngTot4yr" ) %>%
transform(X.EngTot2yr = X.EngTot2yr * 100) %>%
transform(X.EngTot4yr = X.EngTot4yr * 100)
#Create a histogram for 2Y Engineering
hist_2y<- ggplot(egr_degrees, aes (X.EngTot2yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 2 Year Engineering Degrees", x = "Percentange of 2 Year Engineering Degrees", y = "Density")
hist_2y
hist_2y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot2yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot2yr, na.rm = TRUE)), color = "black", size = 1)
#Descriptive Statistics for 2Y Engineering
round(stat.desc(egr_degrees$X.EngTot2yr, basic = FALSE, norm = TRUE), digits = 3)
#Q-QPlot of 2Year
qqplot.2Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot2yr, stat="qq")
qqplot.2Yegr_degrees+ labs(title = "QQPlot for 2 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
#Shapiro-Wilk Test 2 Year
shapiro.test(egr_degrees$X.EngTot2yr)
#Create a histogram for 4Y Engineering
hist_4y<- ggplot(egr_degrees, aes (X.EngTot4yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 4 Year Engineering Degrees", x = "Percentange of 4 Year Engineering Degrees", y = "Density")
hist_4y
hist_4y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot4yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot4yr, na.rm = TRUE)), color = "black", size = 1)
#Descriptive Statistics for 4Y Engineering
round(stat.desc(egr_degrees$X.EngTot4yr, basic = FALSE, norm = TRUE), digits = 3)
#Q-QPlot of 4Year
qqplot.4Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot4yr, stat="qq")
qqplot.4Yegr_degrees+ labs(title = "QQPlot for 4 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
#Shapiro-Wilk Test 4 Year
shapiro.test(egr_degrees$X.EngTot4yr)
library(car)
library(ggplot2)
library(pastecs)
library(psych)
library(Rcmdr)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Problem Set 4")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(dendextend)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(Shoe.Color= as.factor(Shoe.Color))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(Shoe.Color= as.factor(Shoe.Color))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(Shoe.Color= as.factor(Shoe.Color))
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(Shoe.Color= as.factor(Shoe.Color))
cc_df <- cc_df %>% mutate(School= as.factor(School))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
kmeans(na.omit(cc_df), centers = 4)
k2
k2 <- kmeans(na.omit(cc_df), centers = 4)
k2
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(Shoe.Color= as.factor(Shoe.Color))
cc_df <- cc_df %>% mutate(School= as.factor(School))
str(cc_df)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(Shoe.Color= as.factor(Shoe.Color))
cc_df <- cc_df %>% mutate(School= as.factor(School))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(Dress.Color = as.factor(Dress.Color))
cc_df <- cc_df %>% mutate(School= as.factor(School))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(School= as.factor(School))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
str(cc_df)
cc_df <âˆ’ lapply(cc_df$Dress.Size,as.numeric)
str(cc_df)
cc_df <âˆ’ cc_df %>% mutate(Dress.Size = as.numeric(Dress.Size))
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
cc_df <- cc_df %>% mutate(School= as.factor(School))
cc_df <âˆ’ cc_df %>% mutate(Dress.Size = as.numeric(Dress.Size))
str(cc_df)
cc_df <- cc_df %>% mutate(School= as.factor(School))
cc_df <âˆ’ cc_df %>% mutate(Dress.Size = as.numeric(Dress.Size))
k2 <- kmeans(cc_df, center = 2, nstart = 25)
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
View(ts_df)
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
library(dplyr)
ts_df <- filter(ts_df, TransInst.Name == Northern Virginia Comm Coll)
ts_df <- filter(ts_df, TransInst.Name == "Northern Virginia Comm Coll")
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
ts_df <- filter(ts_df, TransInst.Name == "Northern Va Cmty Coll-Annandal")
ts_df <- filter(ts_df, Eng.Bach.Flag != 1)
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
ts_df <- filter(ts_df, TransInst.Name == "Northern Va Cmty Coll-Annandal")
ts_df <- filter(ts_df, Eng.Bach.Flag == 1)
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
ts_df <- filter(ts_df, TransInst.Name == "Northern Va Cmty Coll-Annandal")
ts_df <- filter(ts_df, Eng.Bach.Flag == 1)
str(ts_df)
tsData_sub <- ts_df %>%
select(Gender, NumberofCredits, Eng.Major, GPA, TotalSemesterTimetoDegree, FullTimeSemstoDegree)
View(tsData_sub)
View(tsData_sub)
k2 <- kmeans(tsData_sub, center = 2, nstart = 25)
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram () +
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram ()
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Gender)) +
geom_histogram ()
describe(ts_df$NumberofCredits)
library(tidyr)
describe(ts_df$NumberofCredits)
library(psych)
describe(ts_df$NumberofCredits)
sat_df %>%
ggplot(aes(x = Eng.Major, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of English SAT scores by Race/Ethinicity",
x ="Race/Ethnicity",
y = "English SAT Scores") +
theme(plot.title = element_text(hjust = 0.5))
tsData_sub %>%
ggplot(aes(x = Eng.Major, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of English SAT scores by Race/Ethinicity",
x ="Race/Ethnicity",
y = "English SAT Scores") +
theme(plot.title = element_text(hjust = 0.5))
tsData_sub %>%
ggplot(aes(x = Eng.Major, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of Transfer Credit  by Engineering Discipline",
x ="Engineering Discipline",
y = "Number of Transfer Credits") +
theme(plot.title = element_text(hjust = 0.5))
tsData_sub %>%
ggplot(aes(x = Gender, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of Transfer Credit  by Gender",
x ="Gender",
y = "Number of Transfer Credits") +
theme(plot.title = element_text(hjust = 0.5))
qqplot.tsCredit <- qplot(sample = tsData_sub$NumberofCredits, stat="qq")
qqplot.tsCredit + labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample")
qqplot.tsCredit <- qplot(sample = tsData_sub$NumberofCredits, stat="qq")
qqplot.tsCredit + stat_qq_line()+
labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample")
shapiro.test(tsData_sub$NumberofCredits)
shapiro.test(tsData_sub$GPA)
shapiro.test(tsData_sub$TotalSemesterTimetoDegree)
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram ()
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram ()
facet_grid(Eng.Major ~., scales = "free")
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Gender)) +
geom_histogram ()
facet_grid(Eng.Major ~., scales = "free")
by(ts_df$NumberofCredits, ts_df$Eng.Major, stat.desc)
library(pastecs)
by(ts_df$NumberofCredits, ts_df$Eng.Major, stat.desc)
ts_df %>% filter(Eng.Major == "DOE")
View(ts_df)
View(ts_df)
ts_df %>% filter(Eng.Major == "OE")
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
ts_df <- filter(ts_df, TransInst.Name == "Northern Va Cmty Coll-Annandal")
ts_df <- filter(ts_df, Eng.Bach.Flag == 1)
ts_df %>% filter(Eng.Major == "OE")
ts_df %>% filter(Eng.Major == "CHE")
by(ts_df$NumberofCredits, ts_df$Eng.Major, stat.desc)
ts_df %>% filter(Eng.Major == "DOE")
ts_df %>% filter(ts_df, Eng.Major == "DOE")
ts_df %>% filter(ts_df, Eng.Major == "DOE")
ts_df <- filter(ts_df, Eng.Major == "DOE")
ts_df <- read.csv("VTNETSFinalv2.csv", header = TRUE)
ts_df <- filter(ts_df, TransInst.Name == "Northern Va Cmty Coll-Annandal")
ts_df <- filter(ts_df, Eng.Bach.Flag == 1)
ts_df <- filter(ts_df, Eng. != "DOE")
ts_df <- filter(ts_df, Eng.Major != "DOE")
ts_df <- filter(ts_df, Eng.Major != "DOE")
ts_df <- filter(ts_df, Eng.Major != "OE")
ts_df <- filter(ts_df, Eng.Major != "DOE")
ts_df <- filter(ts_df, Eng.Major != "OE")
ts_df <- filter(ts_df, Eng.Major != "MINE")
ts_df <- filter(ts_df, Eng.Major != "DAE")
ts_df <- filter(ts_df, Eng.Major != "BSE")
ts_df <- filter(ts_df, Eng.Major != "MSE")
ts_df <- filter(ts_df, Eng.Major != "CHE")
ts_df <- filter(ts_df, Eng.Major != "ISE")
ts_df <- filter(ts_df, Eng.Major != "ESM")
by(ts_df$NumberofCredits, ts_df$Eng.Major, stat.desc)
tsData_sub <- ts_df %>%
select(Gender, NumberofCredits, Eng.Major, GPA, TotalSemesterTimetoDegree, FullTimeSemstoDegree)
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram ()
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Gender)) +
geom_histogram ()
facet_grid(Eng.Major ~., scales = "free")
describe(ts_df$NumberofCredits)
by(ts_df$NumberofCredits, ts_df$Eng.Major, stat.desc)
qqplot.tsCredit <- qplot(sample = tsData_sub$NumberofCredits, stat="qq")
qqplot.tsCredit + stat_qq_line()+
labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample")
shapiro.test(tsData_sub$NumberofCredits)
tsData_sub %>%
ggplot(aes(x = Eng.Major, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of Transfer Credit  by Engineering Discipline",
x ="Engineering Discipline",
y = "Number of Transfer Credits") +
theme(plot.title = element_text(hjust = 0.5))
tsData_sub %>%
ggplot(aes(x = Gender, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of Transfer Credit  by Gender",
x ="Gender",
y = "Number of Transfer Credits") +
theme(plot.title = element_text(hjust = 0.5))
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram ()
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram () +
facet_grid(Eng.Major ~., scales = "free")
qqplot.tsCredit <- qplot(sample = tsData_sub$NumberofCredits, stat="qq")
qqplot.tsCredit + stat_qq_line() +
labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample") +
facet_grid(Eng.Major ~., scales = "free")
tsData_sub%>%
ggplot(aes(sample=Eng.Major)) +
stat_qq() +
stat_qq_line() +
facet_wrap(Variable ~ ., scales = "free")
tsData_sub%>%
ggplot(aes(sample=Eng.Major)) +
stat_qq() +
stat_qq_line() +
facet_wrap(Eng.Major ~ ., scales = "free")
tsData_sub%>%
ggplot(aes(sample=NumberofCredits)) +
stat_qq() +
stat_qq_line() +
facet_wrap(Eng.Major ~ ., scales = "free")
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = Eng.Major)) +
geom_histogram ()
tsData_sub %>%
ggplot(aes(x = NumberofCredits)) +
geom_histogram ()
describe(ts_df$NumberofCredits)
qqplot.tsCredit <- qplot(sample = tsData_sub$NumberofCredits, stat="qq")
qqplot.tsCredit + stat_qq_line()+
labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample")
tsData_sub %>%
ggplot(aes(x = TotalSemesterTimetoDegree)) +
geom_histogram ()
shapiro.test(tsData_sub$TotalSemesterTimetoDegree)
tsData_sub %>%
ggplot(aes(x = NumberofCredits, fill = TotalSemesterTimetoDegree)) +
geom_histogram () +
facet_grid(Eng.Major ~., scales = "free")
tsData_sub %>%
ggplot(aes(x = Eng.Major, y = NumberofCredits)) +
geom_boxplot() +
labs(title = "Boxplot of Number of Semesters to Degree by Engineering Discipline",
x ="Engineering Discipline",
y = "Number of Semesters to Degree") +
theme(plot.title = element_text(hjust = 0.5))
tsData_sub %>%
ggplot(aes(x = Eng.Major, y = TotalSemesterTimetoDegree)) +
geom_boxplot() +
labs(title = "Boxplot of Number of Semesters to Degree by Engineering Discipline",
x ="Engineering Discipline",
y = "Number of Semesters to Degree") +
theme(plot.title = element_text(hjust = 0.5))
leveneTest(tsData_sub$TotalSemesterTimetoDegree, tsData_sub$Eng.Major center = median)
leveneTest(tsData_sub$TotalSemesterTimetoDegree, tsData_sub$Eng.Major, center = median)
library(car)
leveneTest(tsData_sub$TotalSemesterTimetoDegree, tsData_sub$Eng.Major, center = median)
kruskal.test(TotalSemesterTimetoDegree ~ Eng.Major, data = tsData_sub)
tsData_sub$Ranks<-rank(tsData_sub$TotalSemesterTimetoDegree)
by(tsData_sub$Ranks, tsData_sub$Eng.Major, mean)
ggplot(tsData_sub, aes(Eng.Major, TotalSemesterTimetoDegree)) + geom_boxplot() +
labs(y = "Total Number of Semstesters after Transfer to Earn Degree", x = "Engineering Discipline")
kruskalmc(TotalSemesterTimetoDegree ~ Eng.Major, data = tsData_sub)
library(pgirmess)
kruskalmc(TotalSemesterTimetoDegree ~ Eng.Major, data = tsData_sub)
kruskalmc(TotalSemesterTimetoDegree ~ Eng.Major, data = tsData_sub, cont = 'two-tailed')
cor(tsData_sub$NumberofCredits, tsData_sub$TotalSemesterTimetoDegree, method="kendall")
cor.test(tsData_sub$NumberofCredits, tsData_sub$TotalSemesterTimetoDegree, alternative = "less",  method="kendall")
cor.test(tsData_sub$NumberofCredits, tsData_sub$TotalSemesterTimetoDegree, alternative = "less",  method="spearman")
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Final Project")
cc_df <- read.csv("VTNETSFianl.csv", header = TRUE)
cc_df <- read.csv("VTNETSFinal.csv", header = TRUE)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Final Project")
cc_df <- read.csv("VTNETSFinal.csv", header = TRUE)
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(dendextend)
library(dplyr)
library(tidyr)
library(psych)
library(pastecs)
library(car)
library(pgirmess)
cc_df <- read.csv("VTNETSFinal.csv", header = TRUE)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Final Project")
cc_df <- read.csv("VTNETSFinal.csv", header = TRUE)
degree_all <- read.csv("VTNETSFinal.csv", header = TRUE)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Final Project")
degree_all <- read.csv("VTNETSFinal.csv", header = TRUE)
degree_all <- read.csv("VTNETSFinal.csv", header = TRUE)
cc_df <- read.csv("2019 Compliled Data.csv", header = TRUE)
View(cc_df)
