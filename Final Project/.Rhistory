rownames(mean_df) <- mean_df$Zone
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "Zone")
mean_df <- mean_df[, -(1)]
rownames(mean_df) <- mean_df$Zone
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "NV")
mean_df <- mean_df[, -(1)]
rownames(mean_df) <- mean_df$Zone
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "NV")
mean_df <- mean_df[, -(1:2)]
rownames(mean_df) <- mean_df$Zone
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "NV")
mean_df2 <- mean_df[, -(1:2)]
rownames(mean_df2) <- mean_df$Zone
mean_df2 <- mean_df[, -(1)]
rownames(mean_df2) <- mean_df$Zone
k1 <- kmeans(mean_df2, center = 10, nstart = 25)
k1
fviz_cluster(k1, data = mean_df2)
k1 <- kmeans(mean_df2, center = 5, nstart = 25)
k1
fviz_cluster(k1, data = mean_df2)
k2 <- kmeans(mean_df2, centers = 2, nstart = 25)
k3 <- kmeans(mean_df2, centers = 3, nstart = 25)
k4 <- kmeans(mean_df2, centers = 4, nstart = 25)
k5 <- kmeans(mean_df2, centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df) + ggtitle("k = 2")
k2 <- kmeans(mean_df2, centers = 2, nstart = 25)
k3 <- kmeans(mean_df2, centers = 3, nstart = 25)
k4 <- kmeans(mean_df2, centers = 4, nstart = 25)
k5 <- kmeans(mean_df2, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df) + ggtitle("k = 2")
p1 <- fviz_cluster(k2, geom = "point", data = mean_df2) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = mean_df2) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df2) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = mean_df2) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(123)
fviz_nbclust(mean_df2, kmeans, method = "wss")
fviz_nbclust(df, kmeans, method = "silhouette")
set.seed(123)
gap_stat <- clusGap(mean_df2, FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
set.seed(123)
final <- kmeans(mean_df2, 4, nstart = 25)
print(final)
fviz_cluster(final, data = mean_df2)
mean_df2 %>%
mutate(Cluster = final$cluster) %>%
group_by(Cluster) %>%
summarise_all("mean")
distance <- get_dist(mean_df2)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
library(cluster)
clusplot(mean_df2, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
plot(k4)
library(ggpubr)
fviz_cluster(k4, data = df[, -5],
palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
fviz_cluster(k4, data = mean_df2,
palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
fviz_cluster(k4, data = mean_df2[,-5],
palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
fviz_cluster(k4, data = mean_df2[,-3],
palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
fviz_cluster(k4, data = mean_df2[,-2],
palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
k4_2 <- kmeans(mean_df2, centers = 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, clean_data)
k4_2 <- kmeans(mean_df2, centers = 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, mean_df2)
# head of df
head(kmeans_basic_df)
k4_2 <- kmeans(mean_df2, centers = 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, mean_df2)
# head of df
head(kmeans_basic_df)
View(kmeans_basic_df)
View(kmeans_basic_table)
View(kmeans_basic_df)
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = Region)) +
ggtitle("Count of Clusters by Region") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = cluster)) +
ggtitle("Count of Clusters by Region") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = Cluster)) +
ggtitle("Count of Clusters by Region") +
theme(plot.title = element_text(hjust = 0.5))
View(zonei_df)
View(zonei_df)
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount, Borough)
Loc_df <- merge(taxi_sub, zonei_df, by.x = "PULocationID", by.y = "LocationID")
Loc_df <- merge(taxi_sub, zonei_df, by.x = "PULocationID", by.y = "LocationID")
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount, Borough)
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount, Borough)
Loc_df <- filter(Loc_df, trip_distance > 0)
Loc_df<- filter(Loc_df, total_amount > 0 )
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "NV")
mean_df2 <- mean_df[, -(1)]
rownames(mean_df2) <- mean_df$Zone
Loc_df <- merge(taxi_sub, zonei_df, by.x = "PULocationID", by.y = "LocationID")
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount, Borough)
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount, Borough)
Loc_df <- filter(Loc_df, trip_distance > 0)
Loc_df<- filter(Loc_df, total_amount > 0 )
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
View(mean_df)
View(mean_df)
mean_df <- inner_join(Loc_df,zonei_df)
kmeans_basic_df2 <- inner_join(kmeans_basic_df, zonei_df)
mean_df <- select(mean_df, Zone, PULocationID, trip_distance, total_amount, Borough)
mean_df <- select(mean_df, Zone, trip_distance, total_amount, Borough)
mean_df <- select(mean_df, Zone, Borough, trip_distance, total_amount, )
k2 <- kmeans(mean_df[,3:4], centers = 2, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df2) + ggtitle("k = 2")
View(k2)
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
.
mean_df <- filter(mean_df, Zone != "NV")
mean_df <- select(mean_df, Zone, Borough, trip_distance, total_amount, )
mean_df <- inner_join(Loc_df,zonei_df)
mean_df <- select(mean_df, Zone, Borough, trip_distance, total_amount, )
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
Loc_df <- merge(taxi_sub, zonei_df, by.x = "PULocationID", by.y = "LocationID")
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount)
Loc_df <- filter(Loc_df, trip_distance > 0)
Loc_df<- filter(Loc_df, total_amount > 0 )
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "NV")
mean_df <- inner_join(Loc_df,zonei_df)
mean_df <- select(mean_df, Zone, Borough, trip_distance, total_amount, )
Loc_df <- merge(taxi_sub, zonei_df, by.x = "PULocationID", by.y = "LocationID")
Loc_df <- select(Loc_df, Zone, PULocationID, trip_distance, total_amount)
Loc_df <- filter(Loc_df, trip_distance > 0)
Loc_df<- filter(Loc_df, total_amount > 0 )
mean_df <- Loc_df %>% group_by(Zone) %>%
summarise_at(vars(-PULocationID), funs(mean(., na.rm=TRUE)))
mean_df <- filter(mean_df, Zone != "NV")
mean_df <- inner_join(mean_df,zonei_df)
mean_df <- select(mean_df, Zone, Borough, trip_distance, total_amount, )
set.seed(123)
final <- kmeans(mean_df[,3:4], 4, nstart = 25)
print(final)
fviz_cluster(final, data = mean_df[,3:4])
fviz_cluster(final, data = mean_df[,3:4])
k2 <- kmeans(mean_df[,3:4], centers = 2, nstart = 25)
k3 <- kmeans(mean_df[,3:4], centers = 3, nstart = 25)
k4 <- kmeans(mean_df[,3:4], centers = 4, nstart = 25)
k5 <- kmeans(mean_df[,3:4], centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df[,3:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(123)
fviz_nbclust(mean_df[,3:4], kmeans, method = "wss")
fviz_nbclust(mean_df[,3:4], kmeans, method = "silhouette")
set.seed(123)
gap_stat <- clusGap(mean_df[,3:4], FUN = kmeans, nstart = 25,
K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
mean_group_df %>%
mutate(Cluster = final$cluster) %>%
group_by(Cluster) %>%
summarise_all("mean")
mean_df %>%
mutate(Cluster = final$cluster) %>%
group_by(Cluster) %>%
summarise_all("mean")
distance <- get_dist(mean_df[,3:4])
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k4_2 <- kmeans(mean_df[,3:4], centers = 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, mean_df)
# head of df
head(kmeans_basic_df)
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = Borough)) +
ggtitle("Count of Clusters by Borough") +
theme(plot.title = element_text(hjust = 0.5))
k2 <- kmeans(mean_df[,3:4], centers = 2, nstart = 25)
k3 <- kmeans(mean_df[,3:4], centers = 3, nstart = 25)
k4 <- kmeans(mean_df[,3:4], centers = 4, nstart = 25)
k5 <- kmeans(mean_df[,3:4], centers = 5, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df[,3:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(123)
final <- kmeans(mean_df[,3:4], 4, nstart = 25)
print(final)
distance <- get_dist(mean_df[,3:4])
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
knitr::opts_chunk$set(echo = TRUE)
degree_all <- read.csv("VTNETSFinal.csv", header = TRUE)
degree_all<- filter(degree_all, TransInst.Name != "NA")
degree_all <- filter(degree_all, Eng.Bach.Flag == 1)
vccs_df <- filter(degree_all, TransInst.Name == "New River Community College" | TransInst.Name == "Northern Va Cmty Coll-Annandal" | TransInst.Name == "Eastern Shore Community Coll"| TransInst.Name == "Virginia Western Cmty Coll" | TransInst.Name == "Tidewater Cmty Coll Nrflk-Main" | TransInst.Name == "Southwest Virginia Cmty Coll" | TransInst.Name ==  "J Sargeant Reynolds Cmty Coll" | TransInst.Name ==  "Piedmont Virginia Cmty College" | TransInst.Name ==  "Central Virginia Community Col" | TransInst.Name ==  "Thomas Nelson Community Coll" | TransInst.Name ==  "Germanna Community College" | TransInst.Name ==  "Danville Community College" | TransInst.Name ==  "Blue Ridge Cmty College VA" | TransInst.Name == "Patrick Henry Community Coll" | TransInst.Name =="Dabney Lancaster Cmty College" | TransInst.Name =="John Tyler Community College" | TransInst.Name == "Lord Fairfax Community Coll"  | TransInst.Name == "Mountain Empire Cmty College" | TransInst.Name == "Rappahannock Community College" | TransInst.Name == "Southside VA Cmty Coll Alberta" | TransInst.Name == "Virginia Highlands Cmty Coll" | TransInst.Name =="Wytheville Community College")
View(vccs_df)
View(vccs_df)
k2 <- kmeans(mean_df[,3:4], centers = 2, nstart = 25)
k3 <- kmeans(mean_df[,3:4], centers = 3, nstart = 25)
k4 <- kmeans(mean_df[,3:4], centers = 4, nstart = 25)
k5 <- kmeans(mean_df[,3:4], centers = 5, nstart = 25)
k6 <- kmeans(mean_df[,3:4], centers = 6, nstart = 25)
k7 <- kmeans(mean_df[,3:4], centers = 7, nstart = 25)
k8 <- kmeans(mean_df[,3:4], centers = 8, nstart = 25)
k9 <- kmeans(mean_df[,3:4], centers = 9, nstart = 25)
k10 <- kmeans(mean_df[,3:4], centers = 10, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df[,3:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 5")
p5 <- fviz_cluster(k6, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 6")
p6 <- fviz_cluster(k7, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 7")
p7 <- fviz_cluster(k8, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 8")
p8 <- fviz_cluster(k9, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 9")
p9 <- fviz_cluster(k10, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 10")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, nrow = 2)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, nrow = 5)
grid.arrange(p1, p2, p3, p4, nrow = 2)
grid.arrange(p5, p6, p7, p8, p9, nrow = 5)
grid.arrange(p5, p6, p7, p8, p9, nrow = 3)
grid.arrange(p1, p2, p3, p4, nrow = 2)
grid.arrange(p5, p6, p7, p8, p9, nrow = 3)
set.seed(123)
fviz_nbclust(mean_df[,3:4], kmeans, method = "wss")
p3
set.seed(123)
final <- kmeans(mean_df[,3:4], 5, nstart = 25)
fviz_cluster(final, data = mean_df[,3:4])
set.seed(123)
final <- kmeans(mean_df[,3:4], 6, nstart = 25)
fviz_cluster(final, data = mean_df[,3:4])
set.seed(123)
final <- kmeans(mean_df[,3:4], 4, nstart = 25)
fviz_cluster(final, data = mean_df[,3:4])
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p3
k2 <- kmeans(mean_df[,3:4], nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df[,3:4]) + ggtitle("k = 2")
grid.arrange(p1, p2, p3, p4, nrow = 2)
k2 <- kmeans(mean_df[,3:4], 2, nstart = 25)
k3 <- kmeans(mean_df[,3:4], 3, nstart = 25)
k4 <- kmeans(mean_df[,3:4], 4, nstart = 25)
k5 <- kmeans(mean_df[,3:4], 5, nstart = 25)
k6 <- kmeans(mean_df[,3:4], 6, nstart = 25)
k7 <- kmeans(mean_df[,3:4], 7, nstart = 25)
k8 <- kmeans(mean_df[,3:4], 8, nstart = 25)
k9 <- kmeans(mean_df[,3:4], 9, nstart = 25)
k10 <- kmeans(mean_df[,3:4], 10, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df[,3:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 5")
p5 <- fviz_cluster(k6, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 6")
p6 <- fviz_cluster(k7, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 7")
p7 <- fviz_cluster(k8, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 8")
p8 <- fviz_cluster(k9, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 9")
p9 <- fviz_cluster(k10, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 10")
grid.arrange(p1, p2, p3, p4, nrow = 2)
grid.arrange(p5, p6, p7, p8, p9, nrow = 3)
p3 <- fviz_cluster(k4, data = mean_df[,3:4]) + ggtitle("k = 4")
p3
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p3
set.seed(123)
final <- kmeans(mean_df[,3:4], center = 4, nstart = 25)
print(final)
fviz_cluster(final, data = mean_df[,3:4])
set.seed(123)
final <- kmeans(mean_df[,3:4], 4, nstart = 25)
fviz_cluster(final, data = mean_df[,3:4])
set.seed(123)
k2 <- kmeans(mean_df[,3:4], 2, nstart = 25)
k3 <- kmeans(mean_df[,3:4], 3, nstart = 25)
k4 <- kmeans(mean_df[,3:4], 4, nstart = 25)
k5 <- kmeans(mean_df[,3:4], 5, nstart = 25)
k6 <- kmeans(mean_df[,3:4], 6, nstart = 25)
k7 <- kmeans(mean_df[,3:4], 7, nstart = 25)
k8 <- kmeans(mean_df[,3:4], 8, nstart = 25)
k9 <- kmeans(mean_df[,3:4], 9, nstart = 25)
k10 <- kmeans(mean_df[,3:4], 10, nstart = 25)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = mean_df[,3:4]) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 5")
p5 <- fviz_cluster(k6, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 6")
p6 <- fviz_cluster(k7, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 7")
p7 <- fviz_cluster(k8, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 8")
p8 <- fviz_cluster(k9, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 9")
p9 <- fviz_cluster(k10, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 10")
grid.arrange(p1, p2, p3, p4, nrow = 2)
grid.arrange(p5, p6, p7, p8, p9, nrow = 3)
p3 <- fviz_cluster(k4, geom = "point",  data = mean_df[,3:4]) + ggtitle("k = 4")
p3
# Cluster Analysis - kmeans
k4_2 <- kmeans(mean_df[,3:4], centers = 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, mean_df)
# head of df
head(kmeans_basic_df)
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = Borough)) +
ggtitle("Count of Clusters by Borough") +
theme(plot.title = element_text(hjust = 0.5))
# Cluster Analysis - kmeans
k4_2 <- kmeans(mean_df[,3:4], 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, mean_df)
# head of df
head(kmeans_basic_df)
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = Borough)) +
ggtitle("Count of Clusters by Borough") +
theme(plot.title = element_text(hjust = 0.5))
set.seed(123)
final <- kmeans(mean_df[,3:4], 4, nstart = 25)
print(final)
fviz_cluster(final, data = mean_df[,3:4])
mean_df %>%
mutate(Cluster = final$cluster) %>%
group_by(Cluster) %>%
summarise_all("mean")
set.seed(123)
final <- kmeans(mean_df[,3:4], 4, nstart = 25)
fviz_cluster(final, data = mean_df[,3:4])
mean_df %>%
mutate(Cluster = final$cluster) %>%
group_by(Cluster) %>%
summarise_all("mean")
# Cluster Analysis - kmeans
k4_2 <- kmeans(mean_df[,3:4], 4)
kmeans_basic_table <- data.frame(k4_2$size, k4_2$centers)
kmeans_basic_df <- data.frame(Cluster = k4_2$cluster, mean_df)
# head of df
head(kmeans_basic_df)
ggplot(data = kmeans_basic_df, aes(y = Cluster)) +
geom_bar(aes(fill = Borough)) +
ggtitle("Count of Clusters by Borough") +
theme(plot.title = element_text(hjust = 0.5))
View(taxi_sub)
View(taxi_df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(dendextend)
library(dplyr)
library(tidyr)
library(psych)
library(pastecs)
library(car)
library(pgirmess)
degree_all <- read.csv("VTNETSFinal.csv", header = TRUE)
degree_all<- filter(degree_all, TransInst.Name != "NA")
degree_all <- filter(degree_all, Eng.Bach.Flag == 1)
degree_all <- filter(degree_all, NumberofCredits > 0)
degree_all <- select(degree_all, TransInst.Name, NumberofCredits, Eng.Major, GPA, TotalSemesterTimetoDegree)
transient_df <- filter(degree_all, NumberofCredits < 12)
transient_df <- mutate(transient_df, Xfer.Type = "Transient")
vccs_df <- filter(degree_all, TransInst.Name == "New River Community College" | TransInst.Name == "Northern Va Cmty Coll-Annandal" | TransInst.Name == "Eastern Shore Community Coll"| TransInst.Name == "Virginia Western Cmty Coll" | TransInst.Name == "Tidewater Cmty Coll Nrflk-Main" | TransInst.Name == "Southwest Virginia Cmty Coll" | TransInst.Name ==  "J Sargeant Reynolds Cmty Coll" | TransInst.Name ==  "Piedmont Virginia Cmty College" | TransInst.Name ==  "Central Virginia Community Col" | TransInst.Name ==  "Thomas Nelson Community Coll" | TransInst.Name ==  "Germanna Community College" | TransInst.Name ==  "Danville Community College" | TransInst.Name ==  "Blue Ridge Cmty College VA" | TransInst.Name == "Patrick Henry Community Coll" | TransInst.Name =="Dabney Lancaster Cmty College" | TransInst.Name =="John Tyler Community College" | TransInst.Name == "Lord Fairfax Community Coll"  | TransInst.Name == "Mountain Empire Cmty College" | TransInst.Name == "Rappahannock Community College" | TransInst.Name == "Southside VA Cmty Coll Alberta" | TransInst.Name == "Virginia Highlands Cmty Coll" | TransInst.Name =="Wytheville Community College"  | TransInst.Name == "Northern Virginia Comm Coll")
vccs_df <- filter(vccs_df, NumberofCredits > 12 )
vccs_df <- mutate(vccs_df, Xfer.Type = "Vert.VCCS")
no_vccs_dfa <- anti_join(degree_all, vccs_df)
no_vccs_dfa <- filter(no_vccs_dfa, TransInst.Name != "Credit by Exam")
no_vccs_df <- filter(no_vccs_dfa, TransInst.Name == "Anne Arundel Community College"| TransInst.Name == "Austin Community Coll - TX"| TransInst.Name == "Barbados Comm Coll"| TransInst.Name == "Bergen Community College"| TransInst.Name == "Berkeley City College"| TransInst.Name == "Broward Cmty Coll Central"| TransInst.Name == "Carroll Cmty College"| TransInst.Name == "Chattanooga State Tech Cmty Cl"| TransInst.Name == "Clackamas Community College"| TransInst.Name == "Collin County Comm Coll" | TransInst.Name == "Colorado Northwestern Cmty Col"| TransInst.Name == "County College of Morris"| TransInst.Name == "Delaware County Community Coll" | TransInst.Name == "Delaware Tech CC Dover Terry C"| TransInst.Name == "Edmonds Community College"|TransInst.Name == "Everett Community College"| TransInst.Name == "Fiorello Laguardia Cmty Coll"| TransInst.Name == "Frederick Community College"| TransInst.Name == "Gateway Cmty College"| TransInst.Name == "Gateway Cmty Technical Coll"| TransInst.Name == "Green River Community College"| TransInst.Name == "Howard Community College"| TransInst.Name == "Hudson Valley Comm unity Coll"| TransInst.Name == "Mercer County Comm Coll" | TransInst.Name == "Miami-Dade Cmty Coll South"| TransInst.Name == "Miami-Dade College"| TransInst.Name == "Monroe Community College"| TransInst.Name == "Montgomery College" | TransInst.Name == "Montgomery College of Takoma" | TransInst.Name == "Montgomery College Rockville" | TransInst.Name == "Northampton Co Area Cmty Coll" | TransInst.Name == "Northampton Community College" | TransInst.Name == "Oakland Cmty Col Bloomfld" | TransInst.Name ==  "Onondaga Community College" | TransInst.Name == "Orange County Community Coll" | TransInst.Name == "Pasadena City College" | TransInst.Name == "Prince Georges Cmty College" | TransInst.Name == "Queensborough Community Coll" | TransInst.Name == "Raritan Valley Cmty Coll" | TransInst.Name == "Red Rocks Community College" | TransInst.Name == "Richard Bland College" | TransInst.Name == "Santa Fe Community College FL" | TransInst.Name == "Santa Fe College" | TransInst.Name == "San Diego City College" | TransInst.Name == "Seattle Central Community Coll" | TransInst.Name == "Spokane Falls Cmty College" | TransInst.Name == "Trident Tech College North" | TransInst.Name =="Westchester Community College")
no_vccs_df <- filter(no_vccs_df, NumberofCredits > 12 )
no_vccs_df <- mutate(no_vccs_df, Xfer.Type = "Vert")
horz_df <- anti_join(no_vccs_dfa, no_vccs_df)
horz_df <- filter(horz_df, NumberofCredits > 12 )
horz_df <- mutate(horz_df, Xfer.Type = "Horz")
eng_trans <- full_join(transient_df, vccs_df)
eng_trans <- full_join(eng_trans, no_vccs_df)
eng_trans <- full_join(eng_trans, horz_df)
eng_trans %>%
ggplot(aes(x = NumberofCredits)) +
geom_histogram ()
qqplot.tsCredit <- qplot(sample = eng_trans$NumberofCredits, stat="qq")
qqplot.tsCredit + stat_qq_line()+
labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample")
shapiro.test(eng_trans$NumberofCredits)
eng_trans %>%
ggplot(aes(x = NumberofCredits, fill = Xfer.Type)) +
geom_histogram () +
facet_grid(Xfer.Type ~., scales = "free")
eng_trans %>%
ggplot(aes(sample=NumberofCredits)) +
stat_qq() +
stat_qq_line() +
facet_wrap(Xfer.Type ~ ., scales = "free")
shapiro.test(horz_df$NumberofCredits)
shapiro.test(transient_df$NumberofCredits)
shapiro.test(no_vccs_df$NumberofCredits)
shapiro.test(vccs_df$NumberofCredits)
describe(eng_trans$NumberofCredits)
by(eng_trans$NumberofCredits, eng_trans$Xfer.Type, stat.desc)
``
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Final Project")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(dendextend)
library(dplyr)
library(tidyr)
library(psych)
library(pastecs)
library(car)
library(pgirmess)
degree_all <- read.csv("VTNETSFinal.csv", header = TRUE)
degree_all<- filter(degree_all, TransInst.Name != "NA")
degree_all <- filter(degree_all, Eng.Bach.Flag == 1)
degree_all <- filter(degree_all, NumberofCredits > 0)
degree_all <- select(degree_all, TransInst.Name, NumberofCredits, Eng.Major, GPA, TotalSemesterTimetoDegree)
transient_df <- filter(degree_all, NumberofCredits < 12)
transient_df <- mutate(transient_df, Xfer.Type = "Transient")
vccs_df <- filter(degree_all, TransInst.Name == "New River Community College" | TransInst.Name == "Northern Va Cmty Coll-Annandal" | TransInst.Name == "Eastern Shore Community Coll"| TransInst.Name == "Virginia Western Cmty Coll" | TransInst.Name == "Tidewater Cmty Coll Nrflk-Main" | TransInst.Name == "Southwest Virginia Cmty Coll" | TransInst.Name ==  "J Sargeant Reynolds Cmty Coll" | TransInst.Name ==  "Piedmont Virginia Cmty College" | TransInst.Name ==  "Central Virginia Community Col" | TransInst.Name ==  "Thomas Nelson Community Coll" | TransInst.Name ==  "Germanna Community College" | TransInst.Name ==  "Danville Community College" | TransInst.Name ==  "Blue Ridge Cmty College VA" | TransInst.Name == "Patrick Henry Community Coll" | TransInst.Name =="Dabney Lancaster Cmty College" | TransInst.Name =="John Tyler Community College" | TransInst.Name == "Lord Fairfax Community Coll"  | TransInst.Name == "Mountain Empire Cmty College" | TransInst.Name == "Rappahannock Community College" | TransInst.Name == "Southside VA Cmty Coll Alberta" | TransInst.Name == "Virginia Highlands Cmty Coll" | TransInst.Name =="Wytheville Community College"  | TransInst.Name == "Northern Virginia Comm Coll")
vccs_df <- filter(vccs_df, NumberofCredits > 12 )
vccs_df <- mutate(vccs_df, Xfer.Type = "Vert.VCCS")
no_vccs_dfa <- anti_join(degree_all, vccs_df)
no_vccs_dfa <- filter(no_vccs_dfa, TransInst.Name != "Credit by Exam")
no_vccs_df <- filter(no_vccs_dfa, TransInst.Name == "Anne Arundel Community College"| TransInst.Name == "Austin Community Coll - TX"| TransInst.Name == "Barbados Comm Coll"| TransInst.Name == "Bergen Community College"| TransInst.Name == "Berkeley City College"| TransInst.Name == "Broward Cmty Coll Central"| TransInst.Name == "Carroll Cmty College"| TransInst.Name == "Chattanooga State Tech Cmty Cl"| TransInst.Name == "Clackamas Community College"| TransInst.Name == "Collin County Comm Coll" | TransInst.Name == "Colorado Northwestern Cmty Col"| TransInst.Name == "County College of Morris"| TransInst.Name == "Delaware County Community Coll" | TransInst.Name == "Delaware Tech CC Dover Terry C"| TransInst.Name == "Edmonds Community College"|TransInst.Name == "Everett Community College"| TransInst.Name == "Fiorello Laguardia Cmty Coll"| TransInst.Name == "Frederick Community College"| TransInst.Name == "Gateway Cmty College"| TransInst.Name == "Gateway Cmty Technical Coll"| TransInst.Name == "Green River Community College"| TransInst.Name == "Howard Community College"| TransInst.Name == "Hudson Valley Comm unity Coll"| TransInst.Name == "Mercer County Comm Coll" | TransInst.Name == "Miami-Dade Cmty Coll South"| TransInst.Name == "Miami-Dade College"| TransInst.Name == "Monroe Community College"| TransInst.Name == "Montgomery College" | TransInst.Name == "Montgomery College of Takoma" | TransInst.Name == "Montgomery College Rockville" | TransInst.Name == "Northampton Co Area Cmty Coll" | TransInst.Name == "Northampton Community College" | TransInst.Name == "Oakland Cmty Col Bloomfld" | TransInst.Name ==  "Onondaga Community College" | TransInst.Name == "Orange County Community Coll" | TransInst.Name == "Pasadena City College" | TransInst.Name == "Prince Georges Cmty College" | TransInst.Name == "Queensborough Community Coll" | TransInst.Name == "Raritan Valley Cmty Coll" | TransInst.Name == "Red Rocks Community College" | TransInst.Name == "Richard Bland College" | TransInst.Name == "Santa Fe Community College FL" | TransInst.Name == "Santa Fe College" | TransInst.Name == "San Diego City College" | TransInst.Name == "Seattle Central Community Coll" | TransInst.Name == "Spokane Falls Cmty College" | TransInst.Name == "Trident Tech College North" | TransInst.Name =="Westchester Community College")
no_vccs_df <- filter(no_vccs_df, NumberofCredits > 12 )
no_vccs_df <- mutate(no_vccs_df, Xfer.Type = "Vert")
horz_df <- anti_join(no_vccs_dfa, no_vccs_df)
horz_df <- filter(horz_df, NumberofCredits > 12 )
horz_df <- mutate(horz_df, Xfer.Type = "Horz")
eng_trans <- full_join(transient_df, vccs_df)
eng_trans <- full_join(eng_trans, no_vccs_df)
eng_trans <- full_join(eng_trans, horz_df)
eng_trans %>%
ggplot(aes(x = NumberofCredits)) +
geom_histogram ()
qqplot.tsCredit <- qplot(sample = eng_trans$NumberofCredits, stat="qq")
qqplot.tsCredit + stat_qq_line()+
labs(title = "QQPlot for Transfer Credit", x = "Thoeretical", y = "Sample")
shapiro.test(eng_trans$NumberofCredits)
eng_trans %>%
ggplot(aes(x = NumberofCredits, fill = Xfer.Type)) +
geom_histogram () +
facet_grid(Xfer.Type ~., scales = "free")
eng_trans %>%
ggplot(aes(sample=NumberofCredits)) +
stat_qq() +
stat_qq_line() +
facet_wrap(Xfer.Type ~ ., scales = "free")
shapiro.test(horz_df$NumberofCredits)
shapiro.test(transient_df$NumberofCredits)
shapiro.test(no_vccs_df$NumberofCredits)
shapiro.test(vccs_df$NumberofCredits)
describe(eng_trans$NumberofCredits)
by(eng_trans$NumberofCredits, eng_trans$Xfer.Type, stat.desc)
``
View(eng_trans)
