metallica <-c("Lars", "James", "Jason", "Kirk")
metallica
metallica <-c(metallica, "Rob")
metallica <-metallica[metallica != "Jason"]
metallica
bsb <-c("Kevin", "Brian", "Nick", "Howie", "AJ")
metallicaNames<- c("Lars", "James", "Kirk", "Rob")
metallicaAges <- c(47, 47, 48, 46)
metallica <-data.frame(Name = metallicaNames, Age = metallicaAges)
metallica
metallica$childAge<- c(12,12,4,6)
metallica
names(metallica)
metallica<-list(metallicaNames, metallicaAges)
metallica
metallica<-cbind(metallicaNames,metallicaAges)
metallica
metallica <-data.frame(Name = metallicaNames, Age = metallicaAges)
metallica$childAge<- c(12,12,4,6)
metalica
metallica
metallica$fatherhoodAge <- metallica$Ages - metallica$childAge
metallica$fatherhoodAge <- metallica$Age - metallica$childAge
metallica
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data=mpg)
mpg
mtcars
?mpg
ggplot(data = mpg)+geom_point(mapping=aes(x = hwy, y = cyl))
ggplot(data = mpg)+geom_point(mapping=aes(x = cyl, y = hwy))
ggplot(data = mpg)+geom_point(mapping=aes(x = drv, y = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)
0
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ<5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg)+geom_point(mapping=aes(x = drv, y = class))+geom_point()+geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))+geom_point()+geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))++geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))+geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
<- library(tidyverse)
library(tidyverse)
ggplot(data = mpg)+geom_point(mapping = aes(x = displ, y = hwy))
filter(mpg,cyl = 8)
filter(mpg, cyl = 4)
?filter
filter(mpg, cyl<8)
filter (diamond, carat > 3)
filter (diamonds, carat > 3 )
library(nycflights13)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
install.packages("dplyr")
library(nycflights13)
library(nycflights13)
dplyr
install.packages("dplyr")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
library(nycflights13)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
install.packages("dplyr")
library(nycflights13)
library(nycflights13)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
print(nycflights13::flights)
filter(flights,month==1, day ==1)
filter(flights,month18, day 11)
filter(flights, month ==8, day ==11)
?nycflights13
filter(flights,arr_delay > 120 | dep_delay >120)
nycflights13::airlines
nycflights13::airports
?flights
filter(flights, origin == "IAH" | origin == "HOU")
library(nycflights13)
filter(flights, origin == "IAH" | origin == "HOU")
filter(flights, dest == "IAH" | dest == "HOU")
nyflights13::dest
?flights
?nycflights13
library(nycflights13)
?dest
dest::
nycflights13::deest
nycflights13::dest
nycflights13::airports
nycflights13::dest
ncyflights13
filter(flights, airlines == UA & airlines == DL and airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
library(nycflights13)
library(tidyverse)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
rlang::last_error()
nycflights13::airlines
filter(flights, airlines == "UA" & airlines == "DL" & airlines == "AA")
rlang::last_error()
filter(flights, airlines == "UA")
filter(flights, month ==1, day == 1)
filter(flights, carrier == UA)
filter(flights, carrier "UA")
filter(flights, carrier == "UA")
filter(flights, carrier == "UA" & carrier == "DL" & carrier (AA))
filter(flights, carrier == "UA" & carrier == "DL" & carrier == "AA")
filter(flights, carrier == "UA" | carrier == "DL" | carrier == "AA")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, month == 7 | month == 8 | month == 9)
filter(flights, dep_delay <= 0 & arr_delay > 0)
filter(flights, dep_delay <= 0 & arr_delay > 120)
filter(flights, month == 8 & day == 11 & origin == "CVG")
filter(flights, origin == "CVG")
filter(flights, origin == "ORD")
filairports
airports
filter(airports, "CVG")
filter(flights, dest == "CLE")
filter(flights, dest == "CVG")
filter fligts, origin == "CVG")
filter(flights, origin == "CVG")
filter (flights, between(month, 7, 9))
is.na(dep_time)
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
arrange(flights, air_time)
arrange(flights, distance)
arrange(flights, desc(distance))
view()
view(flights)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
#> # A tibble: 336,776 x 9
#>    year month   day dep_delay arr_delay distance air_time  gain speed
#>   <int> <int> <int>     <dbl>     <dbl>    <dbl>    <dbl> <dbl> <dbl>
#> 1  2013     1     1         2        11     1400      227    -9  370.
#> 2  2013     1     1         4        20     1416      227   -16  374.
#> 3  2013     1     1         2        33     1089      160   -31  408.
#> 4  2013     1     1        -1       -18     1576      183    17  517.
#> 5  2013     1     1        -6       -25      762      116    19  394.
#> 6  2013     1     1        -4        12      719      150   -16  288.
#> # … with 336,770 more rows
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights
flights_test <-(select(flights, dep_time, sched_dep_time))
flights_test
mutate(flights_test, dep_time_min = dep_time %/% 100 * 60 + dep_time %% 100)
flights_test <- (select, air_time, dep_time, arr_time)
flights_test <- select(flights, air_time, dep_time, arr_time)
flights_test
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time)
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air_time)
mutate(flights_test, taxi_time = ((arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100)) - air_time)
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
library(tidyverse)
?diamonds
dimonds
diamonds
hiccupsData <- read.delim("Hiccups.dat", header = TRUE)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant")
hiccupsData <- read.delim("Hiccups.dat", header = TRUE)
View(hiccupsData)
hiccups <- stack(hiccupsData)
names(hiccups) <- c("Hiccups", "Intervention")
View(hiccupsData)
View(hiccups)
hiccups$Intervention_Factor <- factor(hiccups$Intervention, level = hiccups$Intervention)
library(plyr)
libriary(dplyr)
library(dplyr)
hiccups$Intervention.n <- as.numeric(hiccups$Intervention)
line <- ggplot(hiccups, aes(Intervention.n, hiccups))
library(ggplot2)
line <- ggplot(hiccups, aes(Intervention.n, hiccups))
line + stat_summary(fun.y = mean geom = "point")
line + stat_summary(fun.y = mean, geom = "point")
line + stat_summary(fun.y = mean, geom = "point", aes(group = 1))
line
lecturer_Data <- read.delim(Lecturer Data.dat, header = TRUE)
lecturer_Data <- read.delim("Lecturer Data.dat", header = TRUE)
View(lecturer_Data)
library(Rcmdr)
bar <- ggplot(lecturer_Data, aes (job, friends))
bar + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black")
lecturer_Data$job
lecturer_Data$job[lecturer_Data$job=1]
lecturer_Data$job[lecturer_Data$job==1]
lecturer_Data$job[lecturer_Data$job==1] <- "Lecturer"
lecturer_Data$job[lecturer_Data$job=="Lecturer"] <- 1
lecturer_Data$job_text[lecturer_Data$job==1] <- "Lecturer"
lecturer_Data$job_text[lecturer_Data$job==2] <- "Student"
bar <- ggplot(lecturer_Data, aes (job_text, friends))
bar + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black")
View(lecturer_Data)
lecturer_Data$job[lecturer_Data$job==1]
lecturer_Data$job[lecturer_Data$job==2]
typeof(lecturer_Data)
typeof(lecturer_Data$job)
lecturer_Data <- read.delim("Lecturer Data.dat", header = TRUE)
lecturer_Data$job_text[lecturer_Data$job==1] <- "Lecturer"
lecturer_Data$job_text[lecturer_Data$job==2] <- "Student"
typeof(lecturer_Data)
typeof(lecturer_Data$job)
bar + stat_summary(fun.data = mean_cl_normal, geom = "pointrange")
bar + stat_summary(fun.data = mean_cl_normal, geom = "pointrange") +
stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black")
bar + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "pointrange")
bar + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar")
bar + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2)
#Error bar chart showing the mean alcohol consumption for students and lecturers
bar2 <- ggplot(lecturer_Data, aes(job, alcohol))
bar2 + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2)
lecturer_Data$job_text[lecturer_Data$job==1] <- "Lecturer"
lecturer_Data$job_text[lecturer_Data$job==2] <- "Student"
bar2 + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2)
#Error bar chart showing the mean alcohol consumption for students and lecturers
bar2 <- ggplot(lecturer_Data, aes(job_text, alcohol))
bar2 + stat_summary(fun = mean, geom = "bar", fill = "White", color = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2)
#Error line chart showing the mean income for students and lecturers
line <- ggplot(lecturer_Data, aes(job, income))
line + stat_summary(fun = mean, geom = "point")
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = 1, color = "Blue", linetype = "dashed"))
#Error line chart showing the mean income for students and lecturers
line <- ggplot(lecturer_Data, aes(job_text, income))
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = 1, color = "Blue", linetype = "dashed"))
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = 1), color = "Blue", linetype = "dashed"))
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = 1), color = "Blue", linetype = "dashed"))
line + stat_summary(fun = mean, geom = "point") +
line + stat_summary(fun = mean, geom = "point")
#Error line chart showing the mean income for students and lecturers
line <- ggplot(lecturer_Data, aes(job_text, income))
line + stat_summary(fun = mean, geom = "point")
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = 1), color = "Blue", linetype = "dashed"))
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed"))
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed")
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar")
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2)
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.0.1)
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.01)
line + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Lecturer"), color = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2)
#An error line chart showing the mean neuroticism for students and lecturers.
line2 <- ggplot(lecturer_Data, aes(job_text, neurotic))
line2 + stat_summary(fun = mean, geom = "point") +
stat_summary(fun = mean, geom = "line", aes(group = "Neuroticism"), color = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2)
#A scatter plot with regression lines of alcohol consumption and neuroticism group by lecturer/student
plot <- ggplot(lecturer_Data, aes(neurotic, alcohol))
plot + geom_point() + geom_smooth(method = lm)
plot + geom_point() +
geom_smooth(method = lm, aes(fill = gender), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption")
plot + geom_point() +
geom_smooth(method = lm, aes(fill = gender), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption")
plot + geom_point() +
geom_smooth(method = lm, aes(fill = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption")
plot + geom_point() +
geom_smooth(method = lm, aes(fill = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption", color = "job_text")
plot + geom_point(color = "job_text") +
geom_smooth(method = lm, aes(fill = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption", color = "job_text")
plot + geom_point() +
geom_smooth(method = lm, aes(fill = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption", color = "job_text")
plot + geom_point(aes(color = job_text)) +
geom_smooth(method = lm, aes(fill = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption", color = "job_text")
plot + geom_point(aes(color = job_text)) +
geom_smooth(method = "lm", aes(fill = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption", color = "job_text")
plot + geom_point(aes(color = job_text)) +
geom_smooth(method = "lm", aes(fill = job_text, color = job_text), alpha = 0.1) +
labs(x = "Neuroticism", y = "Alcohol Consumption", color = "job_text")
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read. delim(“dataFile.dat”, header = TRUE)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/Week 3")
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read. delim(“dataFile.dat”, header = TRUE)
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read. delim("dataFile.dat", header = TRUE)
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read. delim("dataFile.dat", header = TRUE)
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read. delim("dataFile.dat", header = TRUE)
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read.delim("dataFile.dat", header = TRUE)
#Task 1
#will need to read in /RPractice/Week 3/Lecturer Data.dat
lecturer_Data <- read.delim("Lecturer Data.dat", header = TRUE)
#Finishing Classwork - Which county has the highest percentage of students on free and reduced lunch?  The lowest?
FRL <- read.csv("Copy of Free Reduced Lunch.csv", header = TRUE)
View(FRL)
#Finishing Classwork - Which county has the highest percentage of students on free and reduced lunch?  The lowest?
VApublic <- read.csv("Copy of Free Reduced Lunch.csv", header = TRUE)
FRL <- select(div_name, starts_with("totalper_"))
FRL <- select("div_name", starts_with("totalper_"))
FRL <- select(VApublic, "div_name", starts_with("totalper_"))
View(FRL)
?colMeans
mutate(FRL, ten_year_mean = colMeans(FRL, na.rm = FALSE, dims = 2:11))
?iris
FRL %>% summarise_each(funs(mean))
by_county <-groupby(FRL, div_name)
by_county <-group_by(FRL, div_name)
View(by_county)
View(by_county)
View(by_county)
by_county <-group_by(FRL, div_name)
summarize(by_county, mean_county = mean(starts_with(totalper_), na.rm = TRUE))
summarize(by_county, mean_county = mean(starts_with("totalper_"), na.rm = TRUE))
summarize(by_county, mean_county = mean(), na.rm = TRUE))
summarize(by_county, mean_county = mean(), na.rm = TRUE)
summarize(by_county, mean_county = mean(FRL,na.rm = TRUE)
summarize(by_county, mean_county = mean(FRL,na.rm = TRUE)
summarize(by_county, mean_county = mean(FRL,na.rm = TRUE))
summarize(by_county, mean_county = mean(FRL,na.rm = TRUE))
?group_by
?mean
summarise(by_county, mean_county = mean(2:11))
View(by_county)
View(VApublic)
View(VApublic)
summarise(by_county, mean_county = mean(2:11, na.rm = FALSE))
summarise(by_county, mean_county = mean(2:11, na.rm = TRUE))
typeof(FRL$totalper_0809)
View(VApublic)
View(FRL)
sub("%", "", FRL$totalper_0809)
as.numeric(sub("%", "", FRL$totalper_0809))
summarise(by_county, mean_county = mean(2:11, na.rm = TRUE))
summarise(by_county, mean_county = mean(2:11, na.rm = TRUE))
summarise(FRL, mean_county = mean(as.numeric(sub("%","",2:11)), na.rm = TRUE))
summarise(by_county, mean_county = mean(as.numeric(sub("%","",2:11)), na.rm = TRUE))
by_county[,2:11]
as.numeric(sub("%","",by_county[,2:11]))
readr::parse_number(by_county[,2:11])
readr::parse_number(by_county$totalper_0809)
readr::parse_number("10%")
by_county[,2:11]
by_county[,2:11] %>% mutate_if(is.character,as.numeric)
by_county[,2:11] %>% mutate_if(is.character,as.numeric(sub,"%",""))
by_county[,2:11] %>% mutate_if(is.character,as.numeric(sub,"%",""))
by_county[2:11]
by_county[,2:11]
data.frame(apply(by_county[2:11], 2, function(x) as.numeric(sub("%","",as.character(x)))))
data.frame(apply(by_county[-1], 2, function(x) as.numeric(sub("%","",as.character(x)))))
by_county[-1] <- data.frame(apply(by_county[-1], 2, function(x) as.numeric(sub("%","",as.character(x)))))
View(by_county)
View(FRL)
View(by_county)
summarise(by_county, mean_county = mean(as.numeric(sub("%","",2:11)), na.rm = TRUE))
summarise(by_county, mean_county = mean(,2:11)), na.rm = TRUE))
summarise(by_county, mean_county = mean(,2:11)), na.rm = TRUE)
summarise(by_county, mean_county = mean(2:11)), na.rm = TRUE)
county <- group_by(by_county, div_name)
summarise(county, co_mean = 2:11, na.rm = TRUE)
summarise(county, co_mean = mean(2:11), na.rm = TRUE)
?group_by
apply(county, 2, mean)
apply(county, 1, mean)
apply(county, 1, mean(x, na.rm = TRUE))
apply(county, 1, mean(x, na.rm = TRUE))
apply(county, 1, mean, na.rm = TRUE)
?na.omit
complete.cases()
complete.cases(county)
apply(county, 1, mean)
county1 <- complete.cases(county)
# some columns have percentages < 0, replace them with NA
by_county[by_county < 0] <- NA
# aggregate by county and calcualte mean for each column/year
by_county_agg <- aggregate(by_county[, -1], list(County=by_county$div_name), mean, na.rm = TRUE)
# reshape data wide to long
by_county_agg_long <- gather(by_county_agg, Year, Percentage, totalper_0809:totalper_1718)
# aggregate by county across all years
by_county_agg_long_counties <- aggregate(list(Percentage=by_county_agg_long$Percentage), list(County=by_county_agg_long$County), mean, na.rm = TRUE)
# find minimum value
by_county_agg_long_counties[which.min(by_county_agg_long_counties$Percentage),]
# find maximum value
by_county_agg_long_counties[which.max(by_county_agg_long_counties$Percentage),]
# convert character percentage columns to numeric columns, replace columns in original DF
by_county[-1] <- data.frame(apply(by_county[-1], 2, function(x) as.numeric(sub("%","",as.character(x)))))
# some columns have percentages < 0, replace them with NA
by_county[by_county < 0] <- NA
# aggregate by county and calcualte mean for each column/year
by_county_agg <- aggregate(by_county[, -1], list(County=by_county$div_name), mean, na.rm = TRUE)
# reshape data wide to long
by_county_agg_long <- gather(by_county_agg, Year, Percentage, totalper_0809:totalper_1718)
library(tidyr)
library(tidyverse)
# reshape data wide to long
by_county_agg_long <- gather(by_county_agg, Year, Percentage, totalper_0809:totalper_1718)
# aggregate by county across all years
by_county_agg_long_counties <- aggregate(list(Percentage=by_county_agg_long$Percentage), list(County=by_county_agg_long$County), mean, na.rm = TRUE)
# find minimum value
by_county_agg_long_counties[which.min(by_county_agg_long_counties$Percentage),]
# find maximum value
by_county_agg_long_counties[which.max(by_county_agg_long_counties$Percentage),]
