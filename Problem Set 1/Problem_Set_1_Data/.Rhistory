metallica$childAge<- c(12,12,4,6)
metalica
metallica
metallica$fatherhoodAge <- metallica$Ages - metallica$childAge
metallica$fatherhoodAge <- metallica$Age - metallica$childAge
metallica
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data=mpg)
mpg
mtcars
?mpg
ggplot(data = mpg)+geom_point(mapping=aes(x = hwy, y = cyl))
ggplot(data = mpg)+geom_point(mapping=aes(x = cyl, y = hwy))
ggplot(data = mpg)+geom_point(mapping=aes(x = drv, y = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)
0
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ<5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg)+geom_point(mapping=aes(x = drv, y = class))+geom_point()+geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))+geom_point()+geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))++geom_smooth()
ggplot(data = mpg)+geom_point(mapping=aes(x = displ, y = hwy))+geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
<- library(tidyverse)
library(tidyverse)
ggplot(data = mpg)+geom_point(mapping = aes(x = displ, y = hwy))
filter(mpg,cyl = 8)
filter(mpg, cyl = 4)
?filter
filter(mpg, cyl<8)
filter (diamond, carat > 3)
filter (diamonds, carat > 3 )
library(nycflights13)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
install.packages("dplyr")
library(nycflights13)
library(nycflights13)
dplyr
install.packages("dplyr")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
library(nycflights13)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
install.packages("dplyr")
library(nycflights13)
library(nycflights13)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
print(nycflights13::flights)
filter(flights,month==1, day ==1)
filter(flights,month18, day 11)
filter(flights, month ==8, day ==11)
?nycflights13
filter(flights,arr_delay > 120 | dep_delay >120)
nycflights13::airlines
nycflights13::airports
?flights
filter(flights, origin == "IAH" | origin == "HOU")
library(nycflights13)
filter(flights, origin == "IAH" | origin == "HOU")
filter(flights, dest == "IAH" | dest == "HOU")
nyflights13::dest
?flights
?nycflights13
library(nycflights13)
?dest
dest::
nycflights13::deest
nycflights13::dest
nycflights13::airports
nycflights13::dest
ncyflights13
filter(flights, airlines == UA & airlines == DL and airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
library(nycflights13)
library(tidyverse)
filter(flights, airlines == UA & airlines == DL & airlines == AA)
rlang::last_error()
nycflights13::airlines
filter(flights, airlines == "UA" & airlines == "DL" & airlines == "AA")
rlang::last_error()
filter(flights, airlines == "UA")
filter(flights, month ==1, day == 1)
filter(flights, carrier == UA)
filter(flights, carrier "UA")
filter(flights, carrier == "UA")
filter(flights, carrier == "UA" & carrier == "DL" & carrier (AA))
filter(flights, carrier == "UA" & carrier == "DL" & carrier == "AA")
filter(flights, carrier == "UA" | carrier == "DL" | carrier == "AA")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, dest == "IAD" | dest=="HOU")
filter(flights, month == 7 | month == 8 | month == 9)
filter(flights, dep_delay <= 0 & arr_delay > 0)
filter(flights, dep_delay <= 0 & arr_delay > 120)
filter(flights, month == 8 & day == 11 & origin == "CVG")
filter(flights, origin == "CVG")
filter(flights, origin == "ORD")
filairports
airports
filter(airports, "CVG")
filter(flights, dest == "CLE")
filter(flights, dest == "CVG")
filter fligts, origin == "CVG")
filter(flights, origin == "CVG")
filter (flights, between(month, 7, 9))
is.na(dep_time)
arrange(flights, year, month, day)
arrange(flights, desc(dep_delay))
arrange(flights, air_time)
arrange(flights, distance)
arrange(flights, desc(distance))
view()
view(flights)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
#> # A tibble: 336,776 x 9
#>    year month   day dep_delay arr_delay distance air_time  gain speed
#>   <int> <int> <int>     <dbl>     <dbl>    <dbl>    <dbl> <dbl> <dbl>
#> 1  2013     1     1         2        11     1400      227    -9  370.
#> 2  2013     1     1         4        20     1416      227   -16  374.
#> 3  2013     1     1         2        33     1089      160   -31  408.
#> 4  2013     1     1        -1       -18     1576      183    17  517.
#> 5  2013     1     1        -6       -25      762      116    19  394.
#> 6  2013     1     1        -4        12      719      150   -16  288.
#> # â€¦ with 336,770 more rows
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights
flights_test <-(select(flights, dep_time, sched_dep_time))
flights_test
mutate(flights_test, dep_time_min = dep_time %/% 100 * 60 + dep_time %% 100)
flights_test <- (select, air_time, dep_time, arr_time)
flights_test <- select(flights, air_time, dep_time, arr_time)
flights_test
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air time)
mutate(flights_test, taxi_time = (arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100) - air_time)
mutate(flights_test, taxi_time = ((arr_time  %/% 100 * 60 + arr_time %% 100) - (dep_time %/% 100 * 60 + dep_time %% 100)) - air_time)
summarize(flights, delay = mean(dep_delay, na.rm = TRUE))
source('~/.active-rstudio-document', echo=TRUE)
getwd()
library(tidyverse)
?diamonds
dimonds
diamonds
Read in Percentage of Engineering Degrees from .csv files
all_degrees <- read.csv("HE_Institutions.csv", header = TRUE)
#Rename first column to match with Teachers.
names(all_degrees)[1] <- "div_name"
#Isolate the 2-year and 4-year columns and convert to percentage
egr_degrees <- all_degrees %>%
select("div_name", "X.EngTot2yr", "X.EngTot4yr" ) %>%
transform(X.EngTot2yr = X.EngTot2yr * 100) %>%
transform(X.EngTot4yr = X.EngTot4yr * 100)
#Create a histogram for 2Y Engineering
hist_2y<- ggplot(egr_degrees, aes (X.EngTot2yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 2 Year Engineering Degrees", x = "Percentange of 2 Year Engineering Degrees", y = "Density")
hist_2y
hist_2y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot2yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot2yr, na.rm = TRUE)), color = "black", size = 1)
#Descriptive Statistics for 2Y Engineering
round(stat.desc(egr_degrees$X.EngTot2yr, basic = FALSE, norm = TRUE), digits = 3)
#Q-QPlot of 2Year
qqplot.2Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot2yr, stat="qq")
qqplot.2Yegr_degrees+ labs(title = "QQPlot for 2 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
#Shapiro-Wilk Test 2 Year
shapiro.test(egr_degrees$X.EngTot2yr)
#Create a histogram for 4Y Engineering
hist_4y<- ggplot(egr_degrees, aes (X.EngTot4yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 4 Year Engineering Degrees", x = "Percentange of 4 Year Engineering Degrees", y = "Density")
hist_4y
hist_4y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot4yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot4yr, na.rm = TRUE)), color = "black", size = 1)
#Descriptive Statistics for 4Y Engineering
round(stat.desc(egr_degrees$X.EngTot4yr, basic = FALSE, norm = TRUE), digits = 3)
#Q-QPlot of 4Year
qqplot.4Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot4yr, stat="qq")
qqplot.4Yegr_degrees+ labs(title = "QQPlot for 4 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
#Shapiro-Wilk Test 4 Year
shapiro.test(egr_degrees$X.EngTot4yr)
library(car)
library(ggplot2)
library(pastecs)
library(psych)
library(Rcmdr)
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Problem_Set_1_Data")
library(car)
library(ggplot2)
library(pastecs)
library(psych)
library(Rcmdr)
library(tidyverse)
library(tidyr)
library(stringr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
prinData <- read.csv("Principal_Salaries.csv", header = TRUE)
teachData <- read.csv("Teacher_Salaries.csv", header = TRUE)
wd
setwd("C:/Users/Amy Richardson/Dropbox/VT - PhD/ENGE 5714 - Quant/R Practice/ENGE5714/Problem_Set_1_Data")
prinData <- read.csv("Principal_Salaries.csv", header = TRUE)
teachData <- read_csv("Teacher_Salaries.csv", header = TRUE)
prinData <- read_csv("Principal_Salaries.csv")
teachData <- read.csv("Teacher_Salaries.csv", header = TRUE)
prinData <- read.csv("Principal_Salaries.csv", header = TRUE)
prinData <- read.csv("../Principal_Salaries.csv", header = TRUE)
prinData <- read.csv("../Problem_Set_1_Data/Principal_Salaries.csv", header = TRUE)
teachData <- read.csv("../Problem_Set_1_Data/Teacher_Salaries.csv", header = TRUE)
prinData <- prinData%>%
mutate_at(vars(starts_with("FY20")), as.numeric)
str(prinData)
prinData_sub <- prinData %>%
select(div_name, starts_with("FY20"))
teachData_sub <- teachData %>%
select(div_name, starts_with("FY20"))
prinData_long <- gather(prinData_sub, Year, Salary,  FY2005P:FY2016P)
teachData_long <- gather(teachData_sub, Year, Salary,  FY2005T:FY2016T)
prinData_long [prinData_long  <= 0] <- NA
teachData_long [teachData_long  <= 0] <- NA
hist_prinData <- ggplot(prinData_long, aes (Salary))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white", binwidth = 3000) +
labs(title = "Histogram of Principal Salaries", x = "Principal Salaries", y = "Density")
hist_prinData
hist_prinData +
stat_function(fun = dnorm, args = list(mean = mean(prinData_long$Salary, na.rm = TRUE), sd = sd(prinData_long$Salary, na.rm = TRUE)), color = "black", size = 1)
hist_teachData <- ggplot(teachData_long, aes (Salary))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white", binwidth = 2000) +
labs(title = "Histogram of Teacher Salaries", x = "Teacher Salaries", y = "Density")
hist_teachData
hist_teachData +
stat_function(fun = dnorm, args = list(mean = mean(teachData_long$Salary, na.rm = TRUE), sd = sd(teachData_long$Salary, na.rm = TRUE)), color = "black", size = 1)
hist_prinData <- ggplot(prinData_long, aes (Salary))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white", binwidth = 3000) +
labs(title = "Histogram of Principal Salaries", x = "Principal Salaries", y = "Density")
hist_prinData +
stat_function(fun = dnorm, args = list(mean = mean(prinData_long$Salary, na.rm = TRUE), sd = sd(prinData_long$Salary, na.rm = TRUE)), color = "black", size = 1)
hist_teachData <- ggplot(teachData_long, aes (Salary))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white", binwidth = 2000) +
labs(title = "Histogram of Teacher Salaries", x = "Teacher Salaries", y = "Density")
hist_teachData +
stat_function(fun = dnorm, args = list(mean = mean(teachData_long$Salary, na.rm = TRUE), sd = sd(teachData_long$Salary, na.rm = TRUE)), color = "black", size = 1)
round(stat.desc(prinData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
round(stat.desc(teachData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
round(stat.desc(prinData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
round(stat.desc(teachData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
qqplot.prinData <- qplot(sample = prinData_long$Salary, stat="qq")
qqplot.prinData + labs(title = "QQPlot for Principal Salaries", x = "Thoeretical", y = "Sample")
qqplot.teachData <- qplot(sample = teachData_long$Salary, stat="qq")
qqplot.teachData + labs(title = "QQPlot for Teacher Salaries", x = "Thoeretical", y = "Sample")
shapiro.test(prinData_long$Salary)
shapiro.test(teachData_long$Salary)
prinData_Tmean <- aggregate(list(PAvgSalary=prinData_long$Salary), list(County=prinData_long$div_name), mean, na.rm=TRUE)
teachData_Tmean <- aggregate(list(TAvgSalary=teachData_long$Salary), list(County=teachData_long$div_name), mean, na.rm=TRUE)
salary_data <- full_join(prinData_Tmean,teachData_Tmean)
scatter_both <- ggplot(salary_data, aes(PAvgSalary,TAvgSalary))
scatter_both + geom_point() +
labs(title = "Compare Teacher and Principal Salaries", x = "Principal Salaries", y = "Teacher Salaries")
round(stat.desc(prinData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
round(stat.desc(teachData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(car)
library(ggplot2)
library(pastecs)
library(psych)
library(Rcmdr)
library(tidyverse)
library(tidyr)
library(stringr)
library(dplyr)
healthData <- read.csv("VA_County_Health.csv", header = TRUE)
healthData <- read.csv("../Problem_Set_1_Data/VA_County_Health.csv", header = TRUE)
teachData16 <- teachData_sub %>%
select(div_name, "FY2016T" )
teachData16[teachData16  < 0] <- NA
healthData16 <- healthData %>%
select(div_name, HR_outcomes_2016, HR_factors_2016)
teach_health_data <- inner_join(teachData16,healthData16)
teach_health_data <- transform(teach_health_data,
Srank = ave(FY2016T, FUN = function(x) rank(-x, ties.method = "first")))
teach_health_data <- mutate(teach_health_data = dense_rank(-FY2016T))
teach_health_data <- transform(teach_health_data,
Srank = ave(FY2016T, FUN = function(x) rank(-x, ties.method = "first")))
View(teach_health_data)
teach_health_data <- mutate(teach_health_data = dense_rank(-FY2016T))
scatter_factor <- ggplot(teach_health_data, aes(Srank,HR_factors_2016))
scatter_factor+ geom_point() +
geom_smooth() +
labs(title = "Compare Teacher Salary Ranking and Health Factor Ranking",
x = "Teacher Salary Ranking", y = "Health Factor Ranking")
scatter_outcome <- ggplot(teach_health_data, aes(Srank,HR_outcomes_2016))
scatter_outcome+ geom_point() +
geom_smooth() +
labs(title = "Compare Teacher Salary Ranking and Health Outccomes Ranking",
x = "Teacher Salary Ranking", y = "Health Outcomes Ranking")
teach_health_data <- inner_join(teachData16,healthData16)
#Adding Rank Column to Joined Data Frame
teach_health_data <- transform(teach_health_data,
Srank = ave(FY2016T, FUN = function(x) rank(-x, ties.method = "first")))
teach_health_data <- inner_join(teachData16,healthData16)
teach_health_data <- transform(teach_health_data,
Srank = ave(FY2016T, FUN = function(x) rank(-x, ties.method = "first")))
scatter_factor+ geom_point() +
geom_smooth() +
labs(title = "Compare Teacher Salary Ranking and Health Factor Ranking in 2016",
x = "Teacher Salary Ranking", y = "Health Factor Ranking")
scatter_outcome+ geom_point() +
geom_smooth() +
labs(title = "Compare Teacher Salary Ranking and Health Outccomes Ranking in 2016",
x = "Teacher Salary Ranking", y = "Health Outcomes Ranking")
all_degrees <- read.csv("../Problem_Set_1_Data/HE_Institutions.csv", header = TRUE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(car)
library(ggplot2)
library(pastecs)
library(psych)
library(Rcmdr)
library(tidyverse)
library(tidyr)
library(stringr)
library(dplyr)
prinData <- read.csv("../Problem_Set_1_Data/Principal_Salaries.csv", header = TRUE)
teachData <- read.csv("../Problem_Set_1_Data/Teacher_Salaries.csv", header = TRUE)
prinData <- prinData%>%
mutate_at(vars(starts_with("FY20")), as.numeric)
prinData_sub <- prinData %>%
select(div_name, starts_with("FY20"))
teachData_sub <- teachData %>%
select(div_name, starts_with("FY20"))
prinData_long <- gather(prinData_sub, Year, Salary,  FY2005P:FY2016P)
teachData_long <- gather(teachData_sub, Year, Salary,  FY2005T:FY2016T)
prinData_long [prinData_long  <= 0] <- NA
teachData_long [teachData_long  <= 0] <- NA
hist_prinData <- ggplot(prinData_long, aes (Salary))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white", binwidth = 3000) +
labs(title = "Histogram of Principal Salaries", x = "Principal Salaries", y = "Density")
hist_prinData +
stat_function(fun = dnorm, args = list(mean = mean(prinData_long$Salary, na.rm = TRUE), sd = sd(prinData_long$Salary, na.rm = TRUE)), color = "black", size = 1)
hist_teachData <- ggplot(teachData_long, aes (Salary))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white", binwidth = 2000) +
labs(title = "Histogram of Teacher Salaries", x = "Teacher Salaries", y = "Density")
hist_teachData +
stat_function(fun = dnorm, args = list(mean = mean(teachData_long$Salary, na.rm = TRUE), sd = sd(teachData_long$Salary, na.rm = TRUE)), color = "black", size = 1)
round(stat.desc(prinData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
round(stat.desc(teachData_long$Salary, basic = FALSE, norm = TRUE), digits = 3)
qqplot.prinData <- qplot(sample = prinData_long$Salary, stat="qq")
qqplot.prinData + labs(title = "QQPlot for Principal Salaries", x = "Thoeretical", y = "Sample")
qqplot.teachData <- qplot(sample = teachData_long$Salary, stat="qq")
qqplot.teachData + labs(title = "QQPlot for Teacher Salaries", x = "Thoeretical", y = "Sample")
shapiro.test(prinData_long$Salary)
shapiro.test(teachData_long$Salary)
prinData_Tmean <- aggregate(list(PAvgSalary=prinData_long$Salary), list(County=prinData_long$div_name), mean, na.rm=TRUE)
teachData_Tmean <- aggregate(list(TAvgSalary=teachData_long$Salary), list(County=teachData_long$div_name), mean, na.rm=TRUE)
salary_data <- full_join(prinData_Tmean,teachData_Tmean)
scatter_both <- ggplot(salary_data, aes(PAvgSalary,TAvgSalary))
scatter_both + geom_point() +
labs(title = "Compare Teacher and Principal Salaries", x = "Principal Salaries", y = "Teacher Salaries")
healthData <- read.csv("../Problem_Set_1_Data/VA_County_Health.csv", header = TRUE)
teachData16 <- teachData_sub %>%
select(div_name, "FY2016T" )
teachData16[teachData16  < 0] <- NA
healthData16 <- healthData %>%
select(div_name, HR_outcomes_2016, HR_factors_2016)
teach_health_data <- inner_join(teachData16,healthData16)
teach_health_data <- transform(teach_health_data,
Srank = ave(FY2016T, FUN = function(x) rank(-x, ties.method = "first")))
scatter_factor <- ggplot(teach_health_data, aes(Srank,HR_factors_2016))
scatter_factor+ geom_point() +
geom_smooth() +
labs(title = "Compare Teacher Salary Ranking and Health Factor Ranking in 2016",
x = "Teacher Salary Ranking", y = "Health Factor Ranking")
scatter_outcome <- ggplot(teach_health_data, aes(Srank,HR_outcomes_2016))
scatter_outcome+ geom_point() +
geom_smooth() +
labs(title = "Compare Teacher Salary Ranking and Health Outccomes Ranking in 2016",
x = "Teacher Salary Ranking", y = "Health Outcomes Ranking")
all_degrees <- read.csv("../Problem_Set_1_Data/HE_Institutions.csv", header = TRUE)
names(all_degrees)[1] <- "div_name"
egr_degrees <- all_degrees %>%
select("div_name", "X.EngTot2yr", "X.EngTot4yr" ) %>%
transform(X.EngTot2yr = X.EngTot2yr * 100) %>%
transform(X.EngTot4yr = X.EngTot4yr * 100)
hist_2y<- ggplot(egr_degrees, aes (X.EngTot2yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 2 Year Engineering Degrees", x = "Percentange of 2 Year Engineering Degrees", y = "Density")
hist_2y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot2yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot2yr, na.rm = TRUE)), color = "black", size = 1)
round(stat.desc(egr_degrees$X.EngTot2yr, basic = FALSE, norm = TRUE), digits = 3)
qqplot.2Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot2yr, stat="qq")
qqplot.2Yegr_degrees+ labs(title = "QQPlot for 2 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
shapiro.test(egr_degrees$X.EngTot2yr)
hist_4y<- ggplot(egr_degrees, aes (X.EngTot4yr))+ theme(legend.position = "none") +
geom_histogram(aes(y = ..density..), color = "black", fill = "white") +
labs(title = "Histogram of 4 Year Engineering Degrees", x = "Percentange of 4 Year Engineering Degrees", y = "Density")
hist_4y +
stat_function(fun = dnorm, args = list(mean = mean(egr_degrees$X.EngTot4yr, na.rm = TRUE), sd = sd(egr_degrees$X.EngTot4yr, na.rm = TRUE)), color = "black", size = 1)
round(stat.desc(egr_degrees$X.EngTot4yr, basic = FALSE, norm = TRUE), digits = 3)
qqplot.4Yegr_degrees<- qplot(sample = egr_degrees$X.EngTot4yr, stat="qq")
qqplot.4Yegr_degrees+ labs(title = "QQPlot for 4 Year Engineering Degrees", x = "Thoeretical", y = "Sample")
shapiro.test(egr_degrees$X.EngTot4yr)
scatter_degrees <- ggplot(egr_degrees, aes(X.EngTot2yr, X.EngTot4yr))
scatter_degrees + geom_point() +
geom_smooth() +
labs(title = "Compare 2Year and 4Year Degrees",
x = "2Year Engineering Degrees", y = "4year Engineering Degrees")
egr_degrees_long <- gather(egr_degrees, Year, Percentage,X.EngTot2yr:X.EngTot4yr)
hist_degrees <- ggplot(egr_degrees_long, aes(x=Percentage, color = Year, fill = Year)) +
geom_histogram(position="identity", alpha = 0.2, bins = 50)+
theme(legend.position = "top")+
labs(x = "Percenage of Engineering Degrees", y = "Count")
hist_degrees
prinData_sub2 <- prinData %>%
select( ?..div_num,div_name, starts_with("FY20"))
prinData_sub2 <- prinData %>%
select( ?..div_num,div_name, starts_with("FY20"))
teachData_sub2 <- teachData %>%
select(?...div_num, div_name, starts_with("FY20"))
prinData_sub2 <- prinData %>%
select(div_num,div_name, starts_with("FY20"))
View(prinData)
str(prinData)
prinData_sub2 <- prinData %>%
select( Ã¯..div_num,div_name, starts_with("FY20"))
teachData_sub2 <- teachData %>%
select(Ã¯..div_num, div_name, starts_with("FY20"))
str(teachData)
teachData_sub2 <- teachData %>%
select(Ã¯...div_num, div_name, starts_with("FY20"))
prinData_long2 <- gather(prinData_sub2, Year, Salary,  FY2005P:FY2016P)
teachData_long2 <- gather(teachData_sub2, Year, Salary,  FY2005T:FY2016T)
prinData_long2 [prinData_long2  <= 0] <- NA
teachData_long2 [teachData_long2  <= 0] <- NA
prinData_Tmean2 <- aggregate(list(PAvgSalary=prinData_long2$Salary), list(Div_num = prinData_long2$?..div_num), mean, na.rm=TRUE)
prinData_Tmean2 <- aggregate(list(PAvgSalary=prinData_long2$Salary), list(Div_num = prinData_long2$Ã¯..div_num), mean, na.rm=TRUE)
teachData_Tmean2 <- aggregate(list(TAvgSalary=teachData_long2$Salary), list(Div_num=teachData_long2$Ã¯...div_num), mean, na.rm=TRUE)
egr_degrees2 <- all_degrees %>%
select("Div_num", "X.EngTot2yr", "X.EngTot4yr" ) %>%
transform(X.EngTot2yr = X.EngTot2yr * 100) %>%
transform(X.EngTot4yr = X.EngTot4yr * 100)
str(salary_data2)
salary_data2 <- salary_data2 %>%
mutate_at(vars(starts_with("Div_num")), as.numeric)
salary_data2 <- full_join(prinData_Tmean2,teachData_Tmean2)
salary_data2 <- salary_data2 %>%
mutate_at(vars(starts_with("Div_num")), as.numeric)
salary_egr_data <- inner_join(egr_degrees2, salary_data2, by = "Div_num")
scatter_4y_teach<- ggplot(salary_egr_data, aes(X.EngTot4yr, TAvgSalary))
scatter_4y_teach + geom_point() +
geom_smooth() +
labs(title = "Compare 4Year Degree Percentage with Teacher Salaries",
x = "4Year Engineering Degrees", y = "Teacher Salary")
scatter_2y_teach<- ggplot(salary_egr_data, aes(X.EngTot2yr, TAvgSalary))
scatter_2y_teach + geom_point() +
geom_smooth() +
labs(title = "Compare 2Year Degree Percentage with Teacher Salaries",
x = "2Year Engineering Degrees", y = "Teacher Salary")
scatter_2y_prin<- ggplot(salary_egr_data, aes(X.EngTot2yr, PAvgSalary))
scatter_2y_prin + geom_point() +
geom_smooth() +
labs(title = "Compare 2Year Degree Percentage with Principal Salaries",
x = "2Year Engineering Degrees", y = "Principal Salary")
